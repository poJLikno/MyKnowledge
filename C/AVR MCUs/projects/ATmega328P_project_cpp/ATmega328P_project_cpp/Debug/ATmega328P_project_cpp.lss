
ATmega328P_project_cpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000024  00800100  000011cc  00001260  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000011cc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800124  00800124  00001284  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001284  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00001320  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ec1  00000000  00000000  000013d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a8d  00000000  00000000  00002299  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000764  00000000  00000000  00002d26  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000234  00000000  00000000  0000348c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ae  00000000  00000000  000036c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000714  00000000  00000000  00003c6e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00004382  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__vector_14>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 bf 00 	jmp	0x17e	; 0x17e <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ec ec       	ldi	r30, 0xCC	; 204
      7c:	f1 e1       	ldi	r31, 0x11	; 17
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a4 32       	cpi	r26, 0x24	; 36
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	a4 e2       	ldi	r26, 0x24	; 36
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a5 33       	cpi	r26, 0x35	; 53
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 4c 01 	call	0x298	; 0x298 <main>
      9e:	0c 94 e4 08 	jmp	0x11c8	; 0x11c8 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <_Z12encoder_inithh>:
unsigned char a, b, lasta;
short con = 0;

void encoder_init(unsigned char p1, unsigned char p2)
{
	a = p1;
      a6:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <a>
	b = p2;
      aa:	60 93 27 01 	sts	0x0127, r22	; 0x800127 <b>
	
	DDRD &= ~((1<<a) | (1<<b));
      ae:	4a b1       	in	r20, 0x0a	; 10
      b0:	21 e0       	ldi	r18, 0x01	; 1
      b2:	30 e0       	ldi	r19, 0x00	; 0
      b4:	f9 01       	movw	r30, r18
      b6:	02 c0       	rjmp	.+4      	; 0xbc <_Z12encoder_inithh+0x16>
      b8:	ee 0f       	add	r30, r30
      ba:	ff 1f       	adc	r31, r31
      bc:	8a 95       	dec	r24
      be:	e2 f7       	brpl	.-8      	; 0xb8 <_Z12encoder_inithh+0x12>
      c0:	c9 01       	movw	r24, r18
      c2:	02 c0       	rjmp	.+4      	; 0xc8 <_Z12encoder_inithh+0x22>
      c4:	88 0f       	add	r24, r24
      c6:	99 1f       	adc	r25, r25
      c8:	6a 95       	dec	r22
      ca:	e2 f7       	brpl	.-8      	; 0xc4 <_Z12encoder_inithh+0x1e>
      cc:	8e 2b       	or	r24, r30
      ce:	80 95       	com	r24
      d0:	84 23       	and	r24, r20
      d2:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~((1<<a) | (1<<b));
      d4:	8b b1       	in	r24, 0x0b	; 11
      d6:	a9 01       	movw	r20, r18
      d8:	00 90 28 01 	lds	r0, 0x0128	; 0x800128 <a>
      dc:	02 c0       	rjmp	.+4      	; 0xe2 <_Z12encoder_inithh+0x3c>
      de:	44 0f       	add	r20, r20
      e0:	55 1f       	adc	r21, r21
      e2:	0a 94       	dec	r0
      e4:	e2 f7       	brpl	.-8      	; 0xde <_Z12encoder_inithh+0x38>
      e6:	00 90 27 01 	lds	r0, 0x0127	; 0x800127 <b>
      ea:	02 c0       	rjmp	.+4      	; 0xf0 <_Z12encoder_inithh+0x4a>
      ec:	22 0f       	add	r18, r18
      ee:	33 1f       	adc	r19, r19
      f0:	0a 94       	dec	r0
      f2:	e2 f7       	brpl	.-8      	; 0xec <_Z12encoder_inithh+0x46>
      f4:	24 2b       	or	r18, r20
      f6:	20 95       	com	r18
      f8:	28 23       	and	r18, r24
      fa:	2b b9       	out	0x0b, r18	; 11
	
	lasta = (PIND & (1<<a)) ? 1 : 0;
      fc:	89 b1       	in	r24, 0x09	; 9
      fe:	90 e0       	ldi	r25, 0x00	; 0
     100:	00 90 28 01 	lds	r0, 0x0128	; 0x800128 <a>
     104:	02 c0       	rjmp	.+4      	; 0x10a <_Z12encoder_inithh+0x64>
     106:	95 95       	asr	r25
     108:	87 95       	ror	r24
     10a:	0a 94       	dec	r0
     10c:	e2 f7       	brpl	.-8      	; 0x106 <_Z12encoder_inithh+0x60>
     10e:	81 70       	andi	r24, 0x01	; 1
     110:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <lasta>
     114:	08 95       	ret

00000116 <_Z14encoder_listenv>:
}

void encoder_listen()
{
	unsigned char currenta = (PIND & (1<<a)) ? 1 : 0;
     116:	89 b1       	in	r24, 0x09	; 9
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	00 90 28 01 	lds	r0, 0x0128	; 0x800128 <a>
     11e:	02 c0       	rjmp	.+4      	; 0x124 <_Z14encoder_listenv+0xe>
     120:	95 95       	asr	r25
     122:	87 95       	ror	r24
     124:	0a 94       	dec	r0
     126:	e2 f7       	brpl	.-8      	; 0x120 <_Z14encoder_listenv+0xa>
     128:	81 70       	andi	r24, 0x01	; 1
	unsigned char currentb = (PIND & (1<<b)) ? 1 : 0;
     12a:	29 b1       	in	r18, 0x09	; 9
     12c:	30 e0       	ldi	r19, 0x00	; 0
     12e:	00 90 27 01 	lds	r0, 0x0127	; 0x800127 <b>
     132:	02 c0       	rjmp	.+4      	; 0x138 <_Z14encoder_listenv+0x22>
     134:	35 95       	asr	r19
     136:	27 95       	ror	r18
     138:	0a 94       	dec	r0
     13a:	e2 f7       	brpl	.-8      	; 0x134 <_Z14encoder_listenv+0x1e>
     13c:	21 70       	andi	r18, 0x01	; 1
	if (currenta != lasta)
     13e:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <lasta>
     142:	89 17       	cp	r24, r25
     144:	d9 f0       	breq	.+54     	; 0x17c <_Z14encoder_listenv+0x66>
	{
		if (currentb != currenta) con -= 45;
     146:	82 17       	cp	r24, r18
     148:	59 f0       	breq	.+22     	; 0x160 <_Z14encoder_listenv+0x4a>
     14a:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__data_end>
     14e:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <__data_end+0x1>
     152:	2d 52       	subi	r18, 0x2D	; 45
     154:	31 09       	sbc	r19, r1
     156:	30 93 25 01 	sts	0x0125, r19	; 0x800125 <__data_end+0x1>
     15a:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <__data_end>
     15e:	0c c0       	rjmp	.+24     	; 0x178 <_Z14encoder_listenv+0x62>
		else if (currentb == currenta) con += 45;
     160:	82 13       	cpse	r24, r18
     162:	0a c0       	rjmp	.+20     	; 0x178 <_Z14encoder_listenv+0x62>
     164:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <__data_end>
     168:	30 91 25 01 	lds	r19, 0x0125	; 0x800125 <__data_end+0x1>
     16c:	23 5d       	subi	r18, 0xD3	; 211
     16e:	3f 4f       	sbci	r19, 0xFF	; 255
     170:	30 93 25 01 	sts	0x0125, r19	; 0x800125 <__data_end+0x1>
     174:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <__data_end>
		
		lasta = currenta;
     178:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <lasta>
     17c:	08 95       	ret

0000017e <__vector_18>:

unsigned short ms = 0;
short lcon = 0;

ISR(USART_RX_vect)
{
     17e:	1f 92       	push	r1
     180:	0f 92       	push	r0
     182:	0f b6       	in	r0, 0x3f	; 63
     184:	0f 92       	push	r0
     186:	11 24       	eor	r1, r1
     188:	2f 93       	push	r18
     18a:	3f 93       	push	r19
     18c:	4f 93       	push	r20
     18e:	5f 93       	push	r21
     190:	6f 93       	push	r22
     192:	7f 93       	push	r23
     194:	8f 93       	push	r24
     196:	9f 93       	push	r25
     198:	af 93       	push	r26
     19a:	bf 93       	push	r27
     19c:	ef 93       	push	r30
     19e:	ff 93       	push	r31
	//char data = UDR0;
	usart_transmit(UDR0);
     1a0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     1a4:	0e 94 63 03 	call	0x6c6	; 0x6c6 <_Z14usart_transmith>
}
     1a8:	ff 91       	pop	r31
     1aa:	ef 91       	pop	r30
     1ac:	bf 91       	pop	r27
     1ae:	af 91       	pop	r26
     1b0:	9f 91       	pop	r25
     1b2:	8f 91       	pop	r24
     1b4:	7f 91       	pop	r23
     1b6:	6f 91       	pop	r22
     1b8:	5f 91       	pop	r21
     1ba:	4f 91       	pop	r20
     1bc:	3f 91       	pop	r19
     1be:	2f 91       	pop	r18
     1c0:	0f 90       	pop	r0
     1c2:	0f be       	out	0x3f, r0	; 63
     1c4:	0f 90       	pop	r0
     1c6:	1f 90       	pop	r1
     1c8:	18 95       	reti

000001ca <__vector_14>:

ISR(TIMER0_COMPA_vect)
{
     1ca:	1f 92       	push	r1
     1cc:	0f 92       	push	r0
     1ce:	0f b6       	in	r0, 0x3f	; 63
     1d0:	0f 92       	push	r0
     1d2:	11 24       	eor	r1, r1
     1d4:	0f 93       	push	r16
     1d6:	1f 93       	push	r17
     1d8:	2f 93       	push	r18
     1da:	3f 93       	push	r19
     1dc:	4f 93       	push	r20
     1de:	5f 93       	push	r21
     1e0:	6f 93       	push	r22
     1e2:	7f 93       	push	r23
     1e4:	8f 93       	push	r24
     1e6:	9f 93       	push	r25
     1e8:	af 93       	push	r26
     1ea:	bf 93       	push	r27
     1ec:	ef 93       	push	r30
     1ee:	ff 93       	push	r31
     1f0:	cf 93       	push	r28
     1f2:	df 93       	push	r29
     1f4:	cd b7       	in	r28, 0x3d	; 61
     1f6:	de b7       	in	r29, 0x3e	; 62
     1f8:	60 97       	sbiw	r28, 0x10	; 16
     1fa:	de bf       	out	0x3e, r29	; 62
     1fc:	cd bf       	out	0x3d, r28	; 61
	ms += 8;
     1fe:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <ms>
     202:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <ms+0x1>
     206:	08 96       	adiw	r24, 0x08	; 8
     208:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <ms+0x1>
     20c:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <ms>
	
	encoder_listen();
     210:	0e 94 8b 00 	call	0x116	; 0x116 <_Z14encoder_listenv>
	
	if (ms == 1000)
     214:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <ms>
     218:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <ms+0x1>
     21c:	88 3e       	cpi	r24, 0xE8	; 232
     21e:	93 40       	sbci	r25, 0x03	; 3
     220:	01 f5       	brne	.+64     	; 0x262 <__vector_14+0x98>
	{
		ms = 0;
     222:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <ms+0x1>
     226:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <ms>
		char her[16];
		snprintf(her, 16, "%d", con);
     22a:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__data_end>
     22e:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__data_end+0x1>
     232:	9f 93       	push	r25
     234:	8f 93       	push	r24
     236:	80 e2       	ldi	r24, 0x20	; 32
     238:	91 e0       	ldi	r25, 0x01	; 1
     23a:	9f 93       	push	r25
     23c:	8f 93       	push	r24
     23e:	1f 92       	push	r1
     240:	80 e1       	ldi	r24, 0x10	; 16
     242:	8f 93       	push	r24
     244:	8e 01       	movw	r16, r28
     246:	0f 5f       	subi	r16, 0xFF	; 255
     248:	1f 4f       	sbci	r17, 0xFF	; 255
     24a:	1f 93       	push	r17
     24c:	0f 93       	push	r16
     24e:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <snprintf>
		usart_println(her);
     252:	c8 01       	movw	r24, r16
     254:	0e 94 6a 03 	call	0x6d4	; 0x6d4 <_Z13usart_printlnPKc>
     258:	0f b6       	in	r0, 0x3f	; 63
     25a:	f8 94       	cli
     25c:	de bf       	out	0x3e, r29	; 62
     25e:	0f be       	out	0x3f, r0	; 63
     260:	cd bf       	out	0x3d, r28	; 61
	}
}
     262:	60 96       	adiw	r28, 0x10	; 16
     264:	0f b6       	in	r0, 0x3f	; 63
     266:	f8 94       	cli
     268:	de bf       	out	0x3e, r29	; 62
     26a:	0f be       	out	0x3f, r0	; 63
     26c:	cd bf       	out	0x3d, r28	; 61
     26e:	df 91       	pop	r29
     270:	cf 91       	pop	r28
     272:	ff 91       	pop	r31
     274:	ef 91       	pop	r30
     276:	bf 91       	pop	r27
     278:	af 91       	pop	r26
     27a:	9f 91       	pop	r25
     27c:	8f 91       	pop	r24
     27e:	7f 91       	pop	r23
     280:	6f 91       	pop	r22
     282:	5f 91       	pop	r21
     284:	4f 91       	pop	r20
     286:	3f 91       	pop	r19
     288:	2f 91       	pop	r18
     28a:	1f 91       	pop	r17
     28c:	0f 91       	pop	r16
     28e:	0f 90       	pop	r0
     290:	0f be       	out	0x3f, r0	; 63
     292:	0f 90       	pop	r0
     294:	1f 90       	pop	r1
     296:	18 95       	reti

00000298 <main>:

int main(void)
{
	TCCR0A = (1<<COM0A1) | (1<<WGM01);
     298:	82 e8       	ldi	r24, 0x82	; 130
     29a:	84 bd       	out	0x24, r24	; 36
	TCCR0B = (1<<CS02) | (1<<CS00);
     29c:	85 e0       	ldi	r24, 0x05	; 5
     29e:	85 bd       	out	0x25, r24	; 37
	TCNT0=0x00;
     2a0:	16 bc       	out	0x26, r1	; 38
	OCR0A=0x7C;
     2a2:	8c e7       	ldi	r24, 0x7C	; 124
     2a4:	87 bd       	out	0x27, r24	; 39
	TIMSK0 = (1<<OCIE0A);
     2a6:	82 e0       	ldi	r24, 0x02	; 2
     2a8:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	
	sei();
     2ac:	78 94       	sei
	
	//adc r1;
	usart_init(9600);
     2ae:	80 e8       	ldi	r24, 0x80	; 128
     2b0:	95 e2       	ldi	r25, 0x25	; 37
     2b2:	0e 94 3b 03 	call	0x676	; 0x676 <_Z10usart_initt>
	encoder_init(6, 7);
     2b6:	67 e0       	ldi	r22, 0x07	; 7
     2b8:	86 e0       	ldi	r24, 0x06	; 6
     2ba:	0e 94 53 00 	call	0xa6	; 0xa6 <_Z12encoder_inithh>
	step_motor_init(2, 3, 4, 5);
     2be:	25 e0       	ldi	r18, 0x05	; 5
     2c0:	44 e0       	ldi	r20, 0x04	; 4
     2c2:	63 e0       	ldi	r22, 0x03	; 3
     2c4:	82 e0       	ldi	r24, 0x02	; 2
     2c6:	0e 94 83 01 	call	0x306	; 0x306 <_Z15step_motor_inithhhh>
    //step_motor m1((1<<2), (1<<3), (1<<4), (1<<5));
    //_delay_ms(1000);
	
    while (1) 
    {
	    if (con != lcon)
     2ca:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__data_end>
     2ce:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__data_end+0x1>
     2d2:	20 91 29 01 	lds	r18, 0x0129	; 0x800129 <lcon>
     2d6:	30 91 2a 01 	lds	r19, 0x012A	; 0x80012a <lcon+0x1>
     2da:	82 17       	cp	r24, r18
     2dc:	93 07       	cpc	r25, r19
     2de:	61 f0       	breq	.+24     	; 0x2f8 <main+0x60>
	    {
		    step_motor_rotate(con - lcon);
     2e0:	82 1b       	sub	r24, r18
     2e2:	93 0b       	sbc	r25, r19
     2e4:	0e 94 ef 01 	call	0x3de	; 0x3de <_Z17step_motor_rotates>
		    lcon = con;
     2e8:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <__data_end>
     2ec:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <__data_end+0x1>
     2f0:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <lcon+0x1>
     2f4:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <lcon>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2f8:	8f e3       	ldi	r24, 0x3F	; 63
     2fa:	9c e9       	ldi	r25, 0x9C	; 156
     2fc:	01 97       	sbiw	r24, 0x01	; 1
     2fe:	f1 f7       	brne	.-4      	; 0x2fc <main+0x64>
     300:	00 c0       	rjmp	.+0      	; 0x302 <main+0x6a>
     302:	00 00       	nop
     304:	e2 cf       	rjmp	.-60     	; 0x2ca <main+0x32>

00000306 <_Z15step_motor_inithhhh>:
#include "step_motor.h"

unsigned short pins[4];

void step_motor_init(unsigned char a, unsigned char b, unsigned char c, unsigned char d)
{
     306:	0f 93       	push	r16
     308:	1f 93       	push	r17
     30a:	cf 93       	push	r28
     30c:	df 93       	push	r29
	pins[0] = a;
     30e:	e8 2f       	mov	r30, r24
     310:	f0 e0       	ldi	r31, 0x00	; 0
     312:	ad e2       	ldi	r26, 0x2D	; 45
     314:	b1 e0       	ldi	r27, 0x01	; 1
     316:	11 96       	adiw	r26, 0x01	; 1
     318:	fc 93       	st	X, r31
     31a:	ee 93       	st	-X, r30
	pins[1] = b;
     31c:	e6 2f       	mov	r30, r22
     31e:	f0 e0       	ldi	r31, 0x00	; 0
     320:	13 96       	adiw	r26, 0x03	; 3
     322:	fc 93       	st	X, r31
     324:	ee 93       	st	-X, r30
     326:	12 97       	sbiw	r26, 0x02	; 2
	pins[2] = c;
     328:	e4 2f       	mov	r30, r20
     32a:	f0 e0       	ldi	r31, 0x00	; 0
     32c:	15 96       	adiw	r26, 0x05	; 5
     32e:	fc 93       	st	X, r31
     330:	ee 93       	st	-X, r30
     332:	14 97       	sbiw	r26, 0x04	; 4
	pins[3] = d;
     334:	e2 2f       	mov	r30, r18
     336:	f0 e0       	ldi	r31, 0x00	; 0
     338:	17 96       	adiw	r26, 0x07	; 7
     33a:	fc 93       	st	X, r31
     33c:	ee 93       	st	-X, r30
     33e:	16 97       	sbiw	r26, 0x06	; 6
	
	DDRD |= (1<<pins[0]) | (1<<pins[1]) | (1<<pins[2]) | (1<<pins[3]);
     340:	9a b1       	in	r25, 0x0a	; 10
     342:	e1 e0       	ldi	r30, 0x01	; 1
     344:	f0 e0       	ldi	r31, 0x00	; 0
     346:	ef 01       	movw	r28, r30
     348:	02 c0       	rjmp	.+4      	; 0x34e <_Z15step_motor_inithhhh+0x48>
     34a:	cc 0f       	add	r28, r28
     34c:	dd 1f       	adc	r29, r29
     34e:	8a 95       	dec	r24
     350:	e2 f7       	brpl	.-8      	; 0x34a <_Z15step_motor_inithhhh+0x44>
     352:	8f 01       	movw	r16, r30
     354:	02 c0       	rjmp	.+4      	; 0x35a <_Z15step_motor_inithhhh+0x54>
     356:	00 0f       	add	r16, r16
     358:	11 1f       	adc	r17, r17
     35a:	6a 95       	dec	r22
     35c:	e2 f7       	brpl	.-8      	; 0x356 <_Z15step_motor_inithhhh+0x50>
     35e:	b8 01       	movw	r22, r16
     360:	8f 01       	movw	r16, r30
     362:	02 c0       	rjmp	.+4      	; 0x368 <_Z15step_motor_inithhhh+0x62>
     364:	00 0f       	add	r16, r16
     366:	11 1f       	adc	r17, r17
     368:	4a 95       	dec	r20
     36a:	e2 f7       	brpl	.-8      	; 0x364 <_Z15step_motor_inithhhh+0x5e>
     36c:	a8 01       	movw	r20, r16
     36e:	8f 01       	movw	r16, r30
     370:	02 c0       	rjmp	.+4      	; 0x376 <_Z15step_motor_inithhhh+0x70>
     372:	00 0f       	add	r16, r16
     374:	11 1f       	adc	r17, r17
     376:	2a 95       	dec	r18
     378:	e2 f7       	brpl	.-8      	; 0x372 <_Z15step_motor_inithhhh+0x6c>
     37a:	8c 2f       	mov	r24, r28
     37c:	86 2b       	or	r24, r22
     37e:	84 2b       	or	r24, r20
     380:	80 2b       	or	r24, r16
     382:	89 2b       	or	r24, r25
     384:	8a b9       	out	0x0a, r24	; 10
	PORTD &= ~((1<<pins[0]) | (1<<pins[1]) | (1<<pins[2]) | (1<<pins[3]));
     386:	8b b1       	in	r24, 0x0b	; 11
     388:	bf 01       	movw	r22, r30
     38a:	0c 90       	ld	r0, X
     38c:	02 c0       	rjmp	.+4      	; 0x392 <_Z15step_motor_inithhhh+0x8c>
     38e:	66 0f       	add	r22, r22
     390:	77 1f       	adc	r23, r23
     392:	0a 94       	dec	r0
     394:	e2 f7       	brpl	.-8      	; 0x38e <_Z15step_motor_inithhhh+0x88>
     396:	af 01       	movw	r20, r30
     398:	12 96       	adiw	r26, 0x02	; 2
     39a:	0c 90       	ld	r0, X
     39c:	12 97       	sbiw	r26, 0x02	; 2
     39e:	02 c0       	rjmp	.+4      	; 0x3a4 <_Z15step_motor_inithhhh+0x9e>
     3a0:	44 0f       	add	r20, r20
     3a2:	55 1f       	adc	r21, r21
     3a4:	0a 94       	dec	r0
     3a6:	e2 f7       	brpl	.-8      	; 0x3a0 <_Z15step_motor_inithhhh+0x9a>
     3a8:	9f 01       	movw	r18, r30
     3aa:	14 96       	adiw	r26, 0x04	; 4
     3ac:	0c 90       	ld	r0, X
     3ae:	14 97       	sbiw	r26, 0x04	; 4
     3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <_Z15step_motor_inithhhh+0xb0>
     3b2:	22 0f       	add	r18, r18
     3b4:	33 1f       	adc	r19, r19
     3b6:	0a 94       	dec	r0
     3b8:	e2 f7       	brpl	.-8      	; 0x3b2 <_Z15step_motor_inithhhh+0xac>
     3ba:	16 96       	adiw	r26, 0x06	; 6
     3bc:	0c 90       	ld	r0, X
     3be:	02 c0       	rjmp	.+4      	; 0x3c4 <_Z15step_motor_inithhhh+0xbe>
     3c0:	ee 0f       	add	r30, r30
     3c2:	ff 1f       	adc	r31, r31
     3c4:	0a 94       	dec	r0
     3c6:	e2 f7       	brpl	.-8      	; 0x3c0 <_Z15step_motor_inithhhh+0xba>
     3c8:	46 2b       	or	r20, r22
     3ca:	24 2b       	or	r18, r20
     3cc:	e2 2b       	or	r30, r18
     3ce:	e0 95       	com	r30
     3d0:	e8 23       	and	r30, r24
     3d2:	eb b9       	out	0x0b, r30	; 11
}
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	1f 91       	pop	r17
     3da:	0f 91       	pop	r16
     3dc:	08 95       	ret

000003de <_Z17step_motor_rotates>:

void step_motor_rotate(short angle)
{
     3de:	af 92       	push	r10
     3e0:	bf 92       	push	r11
     3e2:	cf 92       	push	r12
     3e4:	df 92       	push	r13
     3e6:	ef 92       	push	r14
     3e8:	ff 92       	push	r15
     3ea:	0f 93       	push	r16
     3ec:	1f 93       	push	r17
     3ee:	cf 93       	push	r28
     3f0:	df 93       	push	r29
     3f2:	cd b7       	in	r28, 0x3d	; 61
     3f4:	de b7       	in	r29, 0x3e	; 62
     3f6:	a0 97       	sbiw	r28, 0x20	; 32
     3f8:	0f b6       	in	r0, 0x3f	; 63
     3fa:	f8 94       	cli
     3fc:	de bf       	out	0x3e, r29	; 62
     3fe:	0f be       	out	0x3f, r0	; 63
     400:	cd bf       	out	0x3d, r28	; 61
     402:	bc 01       	movw	r22, r24
	{	
		{1, 0, 0, 1},
		{0, 0, 1, 1},
		{0, 1, 1, 0},
		{1, 1, 0, 0}
	};
     404:	80 e2       	ldi	r24, 0x20	; 32
     406:	e0 e0       	ldi	r30, 0x00	; 0
     408:	f1 e0       	ldi	r31, 0x01	; 1
     40a:	de 01       	movw	r26, r28
     40c:	11 96       	adiw	r26, 0x01	; 1
     40e:	01 90       	ld	r0, Z+
     410:	0d 92       	st	X+, r0
     412:	8a 95       	dec	r24
     414:	e1 f7       	brne	.-8      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>

if (angle > 0)
     416:	16 16       	cp	r1, r22
     418:	17 06       	cpc	r1, r23
     41a:	0c f0       	brlt	.+2      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
     41c:	8c c0       	rjmp	.+280    	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
{
	unsigned short con = round((float)angle / 0.704);
     41e:	07 2e       	mov	r0, r23
     420:	00 0c       	add	r0, r0
     422:	88 0b       	sbc	r24, r24
     424:	99 0b       	sbc	r25, r25
     426:	0e 94 a6 04 	call	0x94c	; 0x94c <__floatsisf>
     42a:	28 e5       	ldi	r18, 0x58	; 88
     42c:	39 e3       	ldi	r19, 0x39	; 57
     42e:	44 e3       	ldi	r20, 0x34	; 52
     430:	5f e3       	ldi	r21, 0x3F	; 63
     432:	0e 94 03 04 	call	0x806	; 0x806 <__divsf3>
     436:	0e 94 9f 05 	call	0xb3e	; 0xb3e <round>
     43a:	0e 94 75 04 	call	0x8ea	; 0x8ea <__fixunssfsi>
	for (unsigned short i = 0; i < con; i++)
     43e:	a1 2c       	mov	r10, r1
     440:	b1 2c       	mov	r11, r1
     442:	a6 16       	cp	r10, r22
     444:	b7 06       	cpc	r11, r23
     446:	08 f0       	brcs	.+2      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     448:	05 c1       	rjmp	.+522    	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
     44a:	40 e0       	ldi	r20, 0x00	; 0
     44c:	50 e0       	ldi	r21, 0x00	; 0
	{
		for (unsigned short y = 0; y < 4; y++)
     44e:	44 30       	cpi	r20, 0x04	; 4
     450:	51 05       	cpc	r21, r1
     452:	08 f0       	brcs	.+2      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
     454:	6c c0       	rjmp	.+216    	; 0x52e <__EEPROM_REGION_LENGTH__+0x12e>
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	90 e0       	ldi	r25, 0x00	; 0
		{
			for (unsigned short x = 0; x < 4; x++)
     45a:	84 30       	cpi	r24, 0x04	; 4
     45c:	91 05       	cpc	r25, r1
     45e:	c0 f5       	brcc	.+112    	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
			{
				if (steps[y][x])
     460:	fa 01       	movw	r30, r20
     462:	ee 0f       	add	r30, r30
     464:	ff 1f       	adc	r31, r31
     466:	ee 0f       	add	r30, r30
     468:	ff 1f       	adc	r31, r31
     46a:	e8 0f       	add	r30, r24
     46c:	f9 1f       	adc	r31, r25
     46e:	ee 0f       	add	r30, r30
     470:	ff 1f       	adc	r31, r31
     472:	21 e0       	ldi	r18, 0x01	; 1
     474:	30 e0       	ldi	r19, 0x00	; 0
     476:	2c 0f       	add	r18, r28
     478:	3d 1f       	adc	r19, r29
     47a:	e2 0f       	add	r30, r18
     47c:	f3 1f       	adc	r31, r19
     47e:	20 81       	ld	r18, Z
     480:	31 81       	ldd	r19, Z+1	; 0x01
     482:	23 2b       	or	r18, r19
     484:	89 f0       	breq	.+34     	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
				{
					PORTD |= (1<<pins[x]);
     486:	1b b1       	in	r17, 0x0b	; 11
     488:	fc 01       	movw	r30, r24
     48a:	ee 0f       	add	r30, r30
     48c:	ff 1f       	adc	r31, r31
     48e:	e3 5d       	subi	r30, 0xD3	; 211
     490:	fe 4f       	sbci	r31, 0xFE	; 254
     492:	21 e0       	ldi	r18, 0x01	; 1
     494:	30 e0       	ldi	r19, 0x00	; 0
     496:	00 80       	ld	r0, Z
     498:	02 c0       	rjmp	.+4      	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
     49a:	22 0f       	add	r18, r18
     49c:	33 1f       	adc	r19, r19
     49e:	0a 94       	dec	r0
     4a0:	e2 f7       	brpl	.-8      	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
     4a2:	21 2b       	or	r18, r17
     4a4:	2b b9       	out	0x0b, r18	; 11
     4a6:	12 c0       	rjmp	.+36     	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
				}
				else
				{
					PORTD &= ~(1<<pins[x]);
     4a8:	eb b1       	in	r30, 0x0b	; 11
     4aa:	8c 01       	movw	r16, r24
     4ac:	00 0f       	add	r16, r16
     4ae:	11 1f       	adc	r17, r17
     4b0:	d8 01       	movw	r26, r16
     4b2:	a3 5d       	subi	r26, 0xD3	; 211
     4b4:	be 4f       	sbci	r27, 0xFE	; 254
     4b6:	21 e0       	ldi	r18, 0x01	; 1
     4b8:	30 e0       	ldi	r19, 0x00	; 0
     4ba:	0c 90       	ld	r0, X
     4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
     4be:	22 0f       	add	r18, r18
     4c0:	33 1f       	adc	r19, r19
     4c2:	0a 94       	dec	r0
     4c4:	e2 f7       	brpl	.-8      	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
     4c6:	20 95       	com	r18
     4c8:	2e 23       	and	r18, r30
     4ca:	2b b9       	out	0x0b, r18	; 11
	unsigned short con = round((float)angle / 0.704);
	for (unsigned short i = 0; i < con; i++)
	{
		for (unsigned short y = 0; y < 4; y++)
		{
			for (unsigned short x = 0; x < 4; x++)
     4cc:	01 96       	adiw	r24, 0x01	; 1
     4ce:	c5 cf       	rjmp	.-118    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
     4d0:	8f e3       	ldi	r24, 0x3F	; 63
     4d2:	9f e1       	ldi	r25, 0x1F	; 31
     4d4:	01 97       	sbiw	r24, 0x01	; 1
     4d6:	f1 f7       	brne	.-4      	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
     4d8:	00 c0       	rjmp	.+0      	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
     4da:	00 00       	nop
				{
					PORTD &= ~(1<<pins[x]);
				}
			}
			_delay_ms(2);
			PORTD &= ~((1<<pins[0]) | (1<<pins[1]) | (1<<pins[2]) | (1<<pins[3]));
     4dc:	2b b1       	in	r18, 0x0b	; 11
     4de:	ed e2       	ldi	r30, 0x2D	; 45
     4e0:	f1 e0       	ldi	r31, 0x01	; 1
     4e2:	81 e0       	ldi	r24, 0x01	; 1
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	6c 01       	movw	r12, r24
     4e8:	00 80       	ld	r0, Z
     4ea:	02 c0       	rjmp	.+4      	; 0x4f0 <__EEPROM_REGION_LENGTH__+0xf0>
     4ec:	cc 0c       	add	r12, r12
     4ee:	dd 1c       	adc	r13, r13
     4f0:	0a 94       	dec	r0
     4f2:	e2 f7       	brpl	.-8      	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
     4f4:	7c 01       	movw	r14, r24
     4f6:	02 80       	ldd	r0, Z+2	; 0x02
     4f8:	02 c0       	rjmp	.+4      	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
     4fa:	ee 0c       	add	r14, r14
     4fc:	ff 1c       	adc	r15, r15
     4fe:	0a 94       	dec	r0
     500:	e2 f7       	brpl	.-8      	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
     502:	8c 01       	movw	r16, r24
     504:	04 80       	ldd	r0, Z+4	; 0x04
     506:	02 c0       	rjmp	.+4      	; 0x50c <__EEPROM_REGION_LENGTH__+0x10c>
     508:	00 0f       	add	r16, r16
     50a:	11 1f       	adc	r17, r17
     50c:	0a 94       	dec	r0
     50e:	e2 f7       	brpl	.-8      	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
     510:	06 80       	ldd	r0, Z+6	; 0x06
     512:	02 c0       	rjmp	.+4      	; 0x518 <__EEPROM_REGION_LENGTH__+0x118>
     514:	88 0f       	add	r24, r24
     516:	99 1f       	adc	r25, r25
     518:	0a 94       	dec	r0
     51a:	e2 f7       	brpl	.-8      	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
     51c:	ec 28       	or	r14, r12
     51e:	0e 29       	or	r16, r14
     520:	80 2b       	or	r24, r16
     522:	80 95       	com	r24
     524:	82 23       	and	r24, r18
     526:	8b b9       	out	0x0b, r24	; 11
if (angle > 0)
{
	unsigned short con = round((float)angle / 0.704);
	for (unsigned short i = 0; i < con; i++)
	{
		for (unsigned short y = 0; y < 4; y++)
     528:	4f 5f       	subi	r20, 0xFF	; 255
     52a:	5f 4f       	sbci	r21, 0xFF	; 255
     52c:	90 cf       	rjmp	.-224    	; 0x44e <__EEPROM_REGION_LENGTH__+0x4e>
	};

if (angle > 0)
{
	unsigned short con = round((float)angle / 0.704);
	for (unsigned short i = 0; i < con; i++)
     52e:	9f ef       	ldi	r25, 0xFF	; 255
     530:	a9 1a       	sub	r10, r25
     532:	b9 0a       	sbc	r11, r25
     534:	86 cf       	rjmp	.-244    	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
			_delay_ms(2);
			PORTD &= ~((1<<pins[0]) | (1<<pins[1]) | (1<<pins[2]) | (1<<pins[3]));
		}
	}
}
else if (angle < 0)
     536:	77 23       	and	r23, r23
     538:	0c f0       	brlt	.+2      	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
     53a:	8c c0       	rjmp	.+280    	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
{
	unsigned short con = round((float)angle * -1.f / 0.704);
     53c:	07 2e       	mov	r0, r23
     53e:	00 0c       	add	r0, r0
     540:	88 0b       	sbc	r24, r24
     542:	99 0b       	sbc	r25, r25
     544:	0e 94 a6 04 	call	0x94c	; 0x94c <__floatsisf>
     548:	90 58       	subi	r25, 0x80	; 128
     54a:	28 e5       	ldi	r18, 0x58	; 88
     54c:	39 e3       	ldi	r19, 0x39	; 57
     54e:	44 e3       	ldi	r20, 0x34	; 52
     550:	5f e3       	ldi	r21, 0x3F	; 63
     552:	0e 94 03 04 	call	0x806	; 0x806 <__divsf3>
     556:	0e 94 9f 05 	call	0xb3e	; 0xb3e <round>
     55a:	0e 94 75 04 	call	0x8ea	; 0x8ea <__fixunssfsi>
	for (unsigned short i = 0; i < con; i++)
     55e:	a1 2c       	mov	r10, r1
     560:	b1 2c       	mov	r11, r1
     562:	a6 16       	cp	r10, r22
     564:	b7 06       	cpc	r11, r23
     566:	08 f0       	brcs	.+2      	; 0x56a <__EEPROM_REGION_LENGTH__+0x16a>
     568:	75 c0       	rjmp	.+234    	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
     56a:	43 e0       	ldi	r20, 0x03	; 3
     56c:	50 e0       	ldi	r21, 0x00	; 0
	{
		for (short y = 3; y >= 0; y--)
     56e:	55 23       	and	r21, r21
     570:	0c f4       	brge	.+2      	; 0x574 <__EEPROM_REGION_LENGTH__+0x174>
     572:	6c c0       	rjmp	.+216    	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
     574:	80 e0       	ldi	r24, 0x00	; 0
     576:	90 e0       	ldi	r25, 0x00	; 0
		{
			for (unsigned short x = 0; x < 4; x++)
     578:	84 30       	cpi	r24, 0x04	; 4
     57a:	91 05       	cpc	r25, r1
     57c:	c0 f5       	brcc	.+112    	; 0x5ee <__EEPROM_REGION_LENGTH__+0x1ee>
			{
				if (steps[y][x])
     57e:	fa 01       	movw	r30, r20
     580:	ee 0f       	add	r30, r30
     582:	ff 1f       	adc	r31, r31
     584:	ee 0f       	add	r30, r30
     586:	ff 1f       	adc	r31, r31
     588:	e8 0f       	add	r30, r24
     58a:	f9 1f       	adc	r31, r25
     58c:	ee 0f       	add	r30, r30
     58e:	ff 1f       	adc	r31, r31
     590:	21 e0       	ldi	r18, 0x01	; 1
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	2c 0f       	add	r18, r28
     596:	3d 1f       	adc	r19, r29
     598:	e2 0f       	add	r30, r18
     59a:	f3 1f       	adc	r31, r19
     59c:	20 81       	ld	r18, Z
     59e:	31 81       	ldd	r19, Z+1	; 0x01
     5a0:	23 2b       	or	r18, r19
     5a2:	89 f0       	breq	.+34     	; 0x5c6 <__EEPROM_REGION_LENGTH__+0x1c6>
				{
					PORTD |= (1<<pins[x]);
     5a4:	1b b1       	in	r17, 0x0b	; 11
     5a6:	fc 01       	movw	r30, r24
     5a8:	ee 0f       	add	r30, r30
     5aa:	ff 1f       	adc	r31, r31
     5ac:	e3 5d       	subi	r30, 0xD3	; 211
     5ae:	fe 4f       	sbci	r31, 0xFE	; 254
     5b0:	21 e0       	ldi	r18, 0x01	; 1
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	00 80       	ld	r0, Z
     5b6:	02 c0       	rjmp	.+4      	; 0x5bc <__EEPROM_REGION_LENGTH__+0x1bc>
     5b8:	22 0f       	add	r18, r18
     5ba:	33 1f       	adc	r19, r19
     5bc:	0a 94       	dec	r0
     5be:	e2 f7       	brpl	.-8      	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
     5c0:	21 2b       	or	r18, r17
     5c2:	2b b9       	out	0x0b, r18	; 11
     5c4:	12 c0       	rjmp	.+36     	; 0x5ea <__EEPROM_REGION_LENGTH__+0x1ea>
				}
				else
				{
					PORTD &= ~(1<<pins[x]);
     5c6:	eb b1       	in	r30, 0x0b	; 11
     5c8:	8c 01       	movw	r16, r24
     5ca:	00 0f       	add	r16, r16
     5cc:	11 1f       	adc	r17, r17
     5ce:	d8 01       	movw	r26, r16
     5d0:	a3 5d       	subi	r26, 0xD3	; 211
     5d2:	be 4f       	sbci	r27, 0xFE	; 254
     5d4:	21 e0       	ldi	r18, 0x01	; 1
     5d6:	30 e0       	ldi	r19, 0x00	; 0
     5d8:	0c 90       	ld	r0, X
     5da:	02 c0       	rjmp	.+4      	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
     5dc:	22 0f       	add	r18, r18
     5de:	33 1f       	adc	r19, r19
     5e0:	0a 94       	dec	r0
     5e2:	e2 f7       	brpl	.-8      	; 0x5dc <__EEPROM_REGION_LENGTH__+0x1dc>
     5e4:	20 95       	com	r18
     5e6:	2e 23       	and	r18, r30
     5e8:	2b b9       	out	0x0b, r18	; 11
	unsigned short con = round((float)angle * -1.f / 0.704);
	for (unsigned short i = 0; i < con; i++)
	{
		for (short y = 3; y >= 0; y--)
		{
			for (unsigned short x = 0; x < 4; x++)
     5ea:	01 96       	adiw	r24, 0x01	; 1
     5ec:	c5 cf       	rjmp	.-118    	; 0x578 <__EEPROM_REGION_LENGTH__+0x178>
     5ee:	8f e3       	ldi	r24, 0x3F	; 63
     5f0:	9f e1       	ldi	r25, 0x1F	; 31
     5f2:	01 97       	sbiw	r24, 0x01	; 1
     5f4:	f1 f7       	brne	.-4      	; 0x5f2 <__EEPROM_REGION_LENGTH__+0x1f2>
     5f6:	00 c0       	rjmp	.+0      	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
     5f8:	00 00       	nop
				{
					PORTD &= ~(1<<pins[x]);
				}
			}
			_delay_ms(2);
			PORTD &= ~((1<<pins[0]) | (1<<pins[1]) | (1<<pins[2]) | (1<<pins[3]));
     5fa:	2b b1       	in	r18, 0x0b	; 11
     5fc:	ed e2       	ldi	r30, 0x2D	; 45
     5fe:	f1 e0       	ldi	r31, 0x01	; 1
     600:	81 e0       	ldi	r24, 0x01	; 1
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	6c 01       	movw	r12, r24
     606:	00 80       	ld	r0, Z
     608:	02 c0       	rjmp	.+4      	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
     60a:	cc 0c       	add	r12, r12
     60c:	dd 1c       	adc	r13, r13
     60e:	0a 94       	dec	r0
     610:	e2 f7       	brpl	.-8      	; 0x60a <__EEPROM_REGION_LENGTH__+0x20a>
     612:	7c 01       	movw	r14, r24
     614:	02 80       	ldd	r0, Z+2	; 0x02
     616:	02 c0       	rjmp	.+4      	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
     618:	ee 0c       	add	r14, r14
     61a:	ff 1c       	adc	r15, r15
     61c:	0a 94       	dec	r0
     61e:	e2 f7       	brpl	.-8      	; 0x618 <__EEPROM_REGION_LENGTH__+0x218>
     620:	8c 01       	movw	r16, r24
     622:	04 80       	ldd	r0, Z+4	; 0x04
     624:	02 c0       	rjmp	.+4      	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
     626:	00 0f       	add	r16, r16
     628:	11 1f       	adc	r17, r17
     62a:	0a 94       	dec	r0
     62c:	e2 f7       	brpl	.-8      	; 0x626 <__EEPROM_REGION_LENGTH__+0x226>
     62e:	06 80       	ldd	r0, Z+6	; 0x06
     630:	02 c0       	rjmp	.+4      	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
     632:	88 0f       	add	r24, r24
     634:	99 1f       	adc	r25, r25
     636:	0a 94       	dec	r0
     638:	e2 f7       	brpl	.-8      	; 0x632 <__EEPROM_REGION_LENGTH__+0x232>
     63a:	ec 28       	or	r14, r12
     63c:	0e 29       	or	r16, r14
     63e:	80 2b       	or	r24, r16
     640:	80 95       	com	r24
     642:	82 23       	and	r24, r18
     644:	8b b9       	out	0x0b, r24	; 11
else if (angle < 0)
{
	unsigned short con = round((float)angle * -1.f / 0.704);
	for (unsigned short i = 0; i < con; i++)
	{
		for (short y = 3; y >= 0; y--)
     646:	41 50       	subi	r20, 0x01	; 1
     648:	51 09       	sbc	r21, r1
     64a:	91 cf       	rjmp	.-222    	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
	}
}
else if (angle < 0)
{
	unsigned short con = round((float)angle * -1.f / 0.704);
	for (unsigned short i = 0; i < con; i++)
     64c:	9f ef       	ldi	r25, 0xFF	; 255
     64e:	a9 1a       	sub	r10, r25
     650:	b9 0a       	sbc	r11, r25
     652:	87 cf       	rjmp	.-242    	; 0x562 <__EEPROM_REGION_LENGTH__+0x162>
			PORTD &= ~((1<<pins[0]) | (1<<pins[1]) | (1<<pins[2]) | (1<<pins[3]));
		}
	}
}
else;
     654:	a0 96       	adiw	r28, 0x20	; 32
     656:	0f b6       	in	r0, 0x3f	; 63
     658:	f8 94       	cli
     65a:	de bf       	out	0x3e, r29	; 62
     65c:	0f be       	out	0x3f, r0	; 63
     65e:	cd bf       	out	0x3d, r28	; 61
     660:	df 91       	pop	r29
     662:	cf 91       	pop	r28
     664:	1f 91       	pop	r17
     666:	0f 91       	pop	r16
     668:	ff 90       	pop	r15
     66a:	ef 90       	pop	r14
     66c:	df 90       	pop	r13
     66e:	cf 90       	pop	r12
     670:	bf 90       	pop	r11
     672:	af 90       	pop	r10
     674:	08 95       	ret

00000676 <_Z10usart_initt>:
	
	for (unsigned short i = 0; i < size; i++)
	{
		usart_transmit(data[i]);
	}
}
     676:	bc 01       	movw	r22, r24
     678:	80 e0       	ldi	r24, 0x00	; 0
     67a:	90 e0       	ldi	r25, 0x00	; 0
     67c:	0e 94 a4 04 	call	0x948	; 0x948 <__floatunsisf>
     680:	20 e0       	ldi	r18, 0x00	; 0
     682:	30 e0       	ldi	r19, 0x00	; 0
     684:	40 e8       	ldi	r20, 0x80	; 128
     686:	51 e4       	ldi	r21, 0x41	; 65
     688:	0e 94 32 05 	call	0xa64	; 0xa64 <__mulsf3>
     68c:	9b 01       	movw	r18, r22
     68e:	ac 01       	movw	r20, r24
     690:	60 e0       	ldi	r22, 0x00	; 0
     692:	74 e2       	ldi	r23, 0x24	; 36
     694:	84 e7       	ldi	r24, 0x74	; 116
     696:	9b e4       	ldi	r25, 0x4B	; 75
     698:	0e 94 03 04 	call	0x806	; 0x806 <__divsf3>
     69c:	20 e0       	ldi	r18, 0x00	; 0
     69e:	30 e0       	ldi	r19, 0x00	; 0
     6a0:	40 e8       	ldi	r20, 0x80	; 128
     6a2:	5f e3       	ldi	r21, 0x3F	; 63
     6a4:	0e 94 96 03 	call	0x72c	; 0x72c <__subsf3>
     6a8:	0e 94 9f 05 	call	0xb3e	; 0xb3e <round>
     6ac:	0e 94 75 04 	call	0x8ea	; 0x8ea <__fixunssfsi>
     6b0:	70 93 c5 00 	sts	0x00C5, r23	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     6b4:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     6b8:	88 e9       	ldi	r24, 0x98	; 152
     6ba:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     6be:	86 e0       	ldi	r24, 0x06	; 6
     6c0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     6c4:	08 95       	ret

000006c6 <_Z14usart_transmith>:
     6c6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     6ca:	95 ff       	sbrs	r25, 5
     6cc:	fc cf       	rjmp	.-8      	; 0x6c6 <_Z14usart_transmith>
     6ce:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     6d2:	08 95       	ret

000006d4 <_Z13usart_printlnPKc>:

void usart_println(const char* data)
{
     6d4:	ef 92       	push	r14
     6d6:	ff 92       	push	r15
     6d8:	0f 93       	push	r16
     6da:	1f 93       	push	r17
     6dc:	cf 93       	push	r28
     6de:	df 93       	push	r29
     6e0:	7c 01       	movw	r14, r24
	unsigned short size = 0;
     6e2:	c0 e0       	ldi	r28, 0x00	; 0
     6e4:	d0 e0       	ldi	r29, 0x00	; 0
	while (1)
	{
		if (data[size] == '\0') break;
     6e6:	f7 01       	movw	r30, r14
     6e8:	ec 0f       	add	r30, r28
     6ea:	fd 1f       	adc	r31, r29
     6ec:	80 81       	ld	r24, Z
     6ee:	88 23       	and	r24, r24
     6f0:	11 f0       	breq	.+4      	; 0x6f6 <_Z13usart_printlnPKc+0x22>
		size++;
     6f2:	21 96       	adiw	r28, 0x01	; 1
}

void usart_println(const char* data)
{
	unsigned short size = 0;
	while (1)
     6f4:	f8 cf       	rjmp	.-16     	; 0x6e6 <_Z13usart_printlnPKc+0x12>
     6f6:	00 e0       	ldi	r16, 0x00	; 0
     6f8:	10 e0       	ldi	r17, 0x00	; 0
	{
		if (data[size] == '\0') break;
		size++;
	}
	
	for (unsigned short i = 0; i < size; i++)
     6fa:	0c 17       	cp	r16, r28
     6fc:	1d 07       	cpc	r17, r29
     6fe:	48 f4       	brcc	.+18     	; 0x712 <_Z13usart_printlnPKc+0x3e>
	{
		usart_transmit(data[i]);
     700:	f7 01       	movw	r30, r14
     702:	e0 0f       	add	r30, r16
     704:	f1 1f       	adc	r31, r17
     706:	80 81       	ld	r24, Z
     708:	0e 94 63 03 	call	0x6c6	; 0x6c6 <_Z14usart_transmith>
	{
		if (data[size] == '\0') break;
		size++;
	}
	
	for (unsigned short i = 0; i < size; i++)
     70c:	0f 5f       	subi	r16, 0xFF	; 255
     70e:	1f 4f       	sbci	r17, 0xFF	; 255
     710:	f4 cf       	rjmp	.-24     	; 0x6fa <_Z13usart_printlnPKc+0x26>
	{
		usart_transmit(data[i]);
	}
	usart_transmit(0x0d);
     712:	8d e0       	ldi	r24, 0x0D	; 13
     714:	0e 94 63 03 	call	0x6c6	; 0x6c6 <_Z14usart_transmith>
	usart_transmit(0x0a);
     718:	8a e0       	ldi	r24, 0x0A	; 10
     71a:	0e 94 63 03 	call	0x6c6	; 0x6c6 <_Z14usart_transmith>
     71e:	df 91       	pop	r29
     720:	cf 91       	pop	r28
     722:	1f 91       	pop	r17
     724:	0f 91       	pop	r16
     726:	ff 90       	pop	r15
     728:	ef 90       	pop	r14
     72a:	08 95       	ret

0000072c <__subsf3>:
     72c:	50 58       	subi	r21, 0x80	; 128

0000072e <__addsf3>:
     72e:	bb 27       	eor	r27, r27
     730:	aa 27       	eor	r26, r26
     732:	0e 94 ae 03 	call	0x75c	; 0x75c <__addsf3x>
     736:	0c 94 f8 04 	jmp	0x9f0	; 0x9f0 <__fp_round>
     73a:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__fp_pscA>
     73e:	38 f0       	brcs	.+14     	; 0x74e <__addsf3+0x20>
     740:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__fp_pscB>
     744:	20 f0       	brcs	.+8      	; 0x74e <__addsf3+0x20>
     746:	39 f4       	brne	.+14     	; 0x756 <__addsf3+0x28>
     748:	9f 3f       	cpi	r25, 0xFF	; 255
     74a:	19 f4       	brne	.+6      	; 0x752 <__addsf3+0x24>
     74c:	26 f4       	brtc	.+8      	; 0x756 <__addsf3+0x28>
     74e:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_nan>
     752:	0e f4       	brtc	.+2      	; 0x756 <__addsf3+0x28>
     754:	e0 95       	com	r30
     756:	e7 fb       	bst	r30, 7
     758:	0c 94 e1 04 	jmp	0x9c2	; 0x9c2 <__fp_inf>

0000075c <__addsf3x>:
     75c:	e9 2f       	mov	r30, r25
     75e:	0e 94 09 05 	call	0xa12	; 0xa12 <__fp_split3>
     762:	58 f3       	brcs	.-42     	; 0x73a <__addsf3+0xc>
     764:	ba 17       	cp	r27, r26
     766:	62 07       	cpc	r22, r18
     768:	73 07       	cpc	r23, r19
     76a:	84 07       	cpc	r24, r20
     76c:	95 07       	cpc	r25, r21
     76e:	20 f0       	brcs	.+8      	; 0x778 <__addsf3x+0x1c>
     770:	79 f4       	brne	.+30     	; 0x790 <__addsf3x+0x34>
     772:	a6 f5       	brtc	.+104    	; 0x7dc <__addsf3x+0x80>
     774:	0c 94 2b 05 	jmp	0xa56	; 0xa56 <__fp_zero>
     778:	0e f4       	brtc	.+2      	; 0x77c <__addsf3x+0x20>
     77a:	e0 95       	com	r30
     77c:	0b 2e       	mov	r0, r27
     77e:	ba 2f       	mov	r27, r26
     780:	a0 2d       	mov	r26, r0
     782:	0b 01       	movw	r0, r22
     784:	b9 01       	movw	r22, r18
     786:	90 01       	movw	r18, r0
     788:	0c 01       	movw	r0, r24
     78a:	ca 01       	movw	r24, r20
     78c:	a0 01       	movw	r20, r0
     78e:	11 24       	eor	r1, r1
     790:	ff 27       	eor	r31, r31
     792:	59 1b       	sub	r21, r25
     794:	99 f0       	breq	.+38     	; 0x7bc <__addsf3x+0x60>
     796:	59 3f       	cpi	r21, 0xF9	; 249
     798:	50 f4       	brcc	.+20     	; 0x7ae <__addsf3x+0x52>
     79a:	50 3e       	cpi	r21, 0xE0	; 224
     79c:	68 f1       	brcs	.+90     	; 0x7f8 <__addsf3x+0x9c>
     79e:	1a 16       	cp	r1, r26
     7a0:	f0 40       	sbci	r31, 0x00	; 0
     7a2:	a2 2f       	mov	r26, r18
     7a4:	23 2f       	mov	r18, r19
     7a6:	34 2f       	mov	r19, r20
     7a8:	44 27       	eor	r20, r20
     7aa:	58 5f       	subi	r21, 0xF8	; 248
     7ac:	f3 cf       	rjmp	.-26     	; 0x794 <__addsf3x+0x38>
     7ae:	46 95       	lsr	r20
     7b0:	37 95       	ror	r19
     7b2:	27 95       	ror	r18
     7b4:	a7 95       	ror	r26
     7b6:	f0 40       	sbci	r31, 0x00	; 0
     7b8:	53 95       	inc	r21
     7ba:	c9 f7       	brne	.-14     	; 0x7ae <__addsf3x+0x52>
     7bc:	7e f4       	brtc	.+30     	; 0x7dc <__addsf3x+0x80>
     7be:	1f 16       	cp	r1, r31
     7c0:	ba 0b       	sbc	r27, r26
     7c2:	62 0b       	sbc	r22, r18
     7c4:	73 0b       	sbc	r23, r19
     7c6:	84 0b       	sbc	r24, r20
     7c8:	ba f0       	brmi	.+46     	; 0x7f8 <__addsf3x+0x9c>
     7ca:	91 50       	subi	r25, 0x01	; 1
     7cc:	a1 f0       	breq	.+40     	; 0x7f6 <__addsf3x+0x9a>
     7ce:	ff 0f       	add	r31, r31
     7d0:	bb 1f       	adc	r27, r27
     7d2:	66 1f       	adc	r22, r22
     7d4:	77 1f       	adc	r23, r23
     7d6:	88 1f       	adc	r24, r24
     7d8:	c2 f7       	brpl	.-16     	; 0x7ca <__addsf3x+0x6e>
     7da:	0e c0       	rjmp	.+28     	; 0x7f8 <__addsf3x+0x9c>
     7dc:	ba 0f       	add	r27, r26
     7de:	62 1f       	adc	r22, r18
     7e0:	73 1f       	adc	r23, r19
     7e2:	84 1f       	adc	r24, r20
     7e4:	48 f4       	brcc	.+18     	; 0x7f8 <__addsf3x+0x9c>
     7e6:	87 95       	ror	r24
     7e8:	77 95       	ror	r23
     7ea:	67 95       	ror	r22
     7ec:	b7 95       	ror	r27
     7ee:	f7 95       	ror	r31
     7f0:	9e 3f       	cpi	r25, 0xFE	; 254
     7f2:	08 f0       	brcs	.+2      	; 0x7f6 <__addsf3x+0x9a>
     7f4:	b0 cf       	rjmp	.-160    	; 0x756 <__addsf3+0x28>
     7f6:	93 95       	inc	r25
     7f8:	88 0f       	add	r24, r24
     7fa:	08 f0       	brcs	.+2      	; 0x7fe <__addsf3x+0xa2>
     7fc:	99 27       	eor	r25, r25
     7fe:	ee 0f       	add	r30, r30
     800:	97 95       	ror	r25
     802:	87 95       	ror	r24
     804:	08 95       	ret

00000806 <__divsf3>:
     806:	0e 94 17 04 	call	0x82e	; 0x82e <__divsf3x>
     80a:	0c 94 f8 04 	jmp	0x9f0	; 0x9f0 <__fp_round>
     80e:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__fp_pscB>
     812:	58 f0       	brcs	.+22     	; 0x82a <__divsf3+0x24>
     814:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__fp_pscA>
     818:	40 f0       	brcs	.+16     	; 0x82a <__divsf3+0x24>
     81a:	29 f4       	brne	.+10     	; 0x826 <__divsf3+0x20>
     81c:	5f 3f       	cpi	r21, 0xFF	; 255
     81e:	29 f0       	breq	.+10     	; 0x82a <__divsf3+0x24>
     820:	0c 94 e1 04 	jmp	0x9c2	; 0x9c2 <__fp_inf>
     824:	51 11       	cpse	r21, r1
     826:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__fp_szero>
     82a:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_nan>

0000082e <__divsf3x>:
     82e:	0e 94 09 05 	call	0xa12	; 0xa12 <__fp_split3>
     832:	68 f3       	brcs	.-38     	; 0x80e <__divsf3+0x8>

00000834 <__divsf3_pse>:
     834:	99 23       	and	r25, r25
     836:	b1 f3       	breq	.-20     	; 0x824 <__divsf3+0x1e>
     838:	55 23       	and	r21, r21
     83a:	91 f3       	breq	.-28     	; 0x820 <__divsf3+0x1a>
     83c:	95 1b       	sub	r25, r21
     83e:	55 0b       	sbc	r21, r21
     840:	bb 27       	eor	r27, r27
     842:	aa 27       	eor	r26, r26
     844:	62 17       	cp	r22, r18
     846:	73 07       	cpc	r23, r19
     848:	84 07       	cpc	r24, r20
     84a:	38 f0       	brcs	.+14     	; 0x85a <__divsf3_pse+0x26>
     84c:	9f 5f       	subi	r25, 0xFF	; 255
     84e:	5f 4f       	sbci	r21, 0xFF	; 255
     850:	22 0f       	add	r18, r18
     852:	33 1f       	adc	r19, r19
     854:	44 1f       	adc	r20, r20
     856:	aa 1f       	adc	r26, r26
     858:	a9 f3       	breq	.-22     	; 0x844 <__divsf3_pse+0x10>
     85a:	35 d0       	rcall	.+106    	; 0x8c6 <__divsf3_pse+0x92>
     85c:	0e 2e       	mov	r0, r30
     85e:	3a f0       	brmi	.+14     	; 0x86e <__divsf3_pse+0x3a>
     860:	e0 e8       	ldi	r30, 0x80	; 128
     862:	32 d0       	rcall	.+100    	; 0x8c8 <__divsf3_pse+0x94>
     864:	91 50       	subi	r25, 0x01	; 1
     866:	50 40       	sbci	r21, 0x00	; 0
     868:	e6 95       	lsr	r30
     86a:	00 1c       	adc	r0, r0
     86c:	ca f7       	brpl	.-14     	; 0x860 <__divsf3_pse+0x2c>
     86e:	2b d0       	rcall	.+86     	; 0x8c6 <__divsf3_pse+0x92>
     870:	fe 2f       	mov	r31, r30
     872:	29 d0       	rcall	.+82     	; 0x8c6 <__divsf3_pse+0x92>
     874:	66 0f       	add	r22, r22
     876:	77 1f       	adc	r23, r23
     878:	88 1f       	adc	r24, r24
     87a:	bb 1f       	adc	r27, r27
     87c:	26 17       	cp	r18, r22
     87e:	37 07       	cpc	r19, r23
     880:	48 07       	cpc	r20, r24
     882:	ab 07       	cpc	r26, r27
     884:	b0 e8       	ldi	r27, 0x80	; 128
     886:	09 f0       	breq	.+2      	; 0x88a <__divsf3_pse+0x56>
     888:	bb 0b       	sbc	r27, r27
     88a:	80 2d       	mov	r24, r0
     88c:	bf 01       	movw	r22, r30
     88e:	ff 27       	eor	r31, r31
     890:	93 58       	subi	r25, 0x83	; 131
     892:	5f 4f       	sbci	r21, 0xFF	; 255
     894:	3a f0       	brmi	.+14     	; 0x8a4 <__divsf3_pse+0x70>
     896:	9e 3f       	cpi	r25, 0xFE	; 254
     898:	51 05       	cpc	r21, r1
     89a:	78 f0       	brcs	.+30     	; 0x8ba <__divsf3_pse+0x86>
     89c:	0c 94 e1 04 	jmp	0x9c2	; 0x9c2 <__fp_inf>
     8a0:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__fp_szero>
     8a4:	5f 3f       	cpi	r21, 0xFF	; 255
     8a6:	e4 f3       	brlt	.-8      	; 0x8a0 <__divsf3_pse+0x6c>
     8a8:	98 3e       	cpi	r25, 0xE8	; 232
     8aa:	d4 f3       	brlt	.-12     	; 0x8a0 <__divsf3_pse+0x6c>
     8ac:	86 95       	lsr	r24
     8ae:	77 95       	ror	r23
     8b0:	67 95       	ror	r22
     8b2:	b7 95       	ror	r27
     8b4:	f7 95       	ror	r31
     8b6:	9f 5f       	subi	r25, 0xFF	; 255
     8b8:	c9 f7       	brne	.-14     	; 0x8ac <__divsf3_pse+0x78>
     8ba:	88 0f       	add	r24, r24
     8bc:	91 1d       	adc	r25, r1
     8be:	96 95       	lsr	r25
     8c0:	87 95       	ror	r24
     8c2:	97 f9       	bld	r25, 7
     8c4:	08 95       	ret
     8c6:	e1 e0       	ldi	r30, 0x01	; 1
     8c8:	66 0f       	add	r22, r22
     8ca:	77 1f       	adc	r23, r23
     8cc:	88 1f       	adc	r24, r24
     8ce:	bb 1f       	adc	r27, r27
     8d0:	62 17       	cp	r22, r18
     8d2:	73 07       	cpc	r23, r19
     8d4:	84 07       	cpc	r24, r20
     8d6:	ba 07       	cpc	r27, r26
     8d8:	20 f0       	brcs	.+8      	; 0x8e2 <__divsf3_pse+0xae>
     8da:	62 1b       	sub	r22, r18
     8dc:	73 0b       	sbc	r23, r19
     8de:	84 0b       	sbc	r24, r20
     8e0:	ba 0b       	sbc	r27, r26
     8e2:	ee 1f       	adc	r30, r30
     8e4:	88 f7       	brcc	.-30     	; 0x8c8 <__divsf3_pse+0x94>
     8e6:	e0 95       	com	r30
     8e8:	08 95       	ret

000008ea <__fixunssfsi>:
     8ea:	0e 94 11 05 	call	0xa22	; 0xa22 <__fp_splitA>
     8ee:	88 f0       	brcs	.+34     	; 0x912 <__stack+0x13>
     8f0:	9f 57       	subi	r25, 0x7F	; 127
     8f2:	98 f0       	brcs	.+38     	; 0x91a <__stack+0x1b>
     8f4:	b9 2f       	mov	r27, r25
     8f6:	99 27       	eor	r25, r25
     8f8:	b7 51       	subi	r27, 0x17	; 23
     8fa:	b0 f0       	brcs	.+44     	; 0x928 <__stack+0x29>
     8fc:	e1 f0       	breq	.+56     	; 0x936 <__stack+0x37>
     8fe:	66 0f       	add	r22, r22
     900:	77 1f       	adc	r23, r23
     902:	88 1f       	adc	r24, r24
     904:	99 1f       	adc	r25, r25
     906:	1a f0       	brmi	.+6      	; 0x90e <__stack+0xf>
     908:	ba 95       	dec	r27
     90a:	c9 f7       	brne	.-14     	; 0x8fe <__fixunssfsi+0x14>
     90c:	14 c0       	rjmp	.+40     	; 0x936 <__stack+0x37>
     90e:	b1 30       	cpi	r27, 0x01	; 1
     910:	91 f0       	breq	.+36     	; 0x936 <__stack+0x37>
     912:	0e 94 2b 05 	call	0xa56	; 0xa56 <__fp_zero>
     916:	b1 e0       	ldi	r27, 0x01	; 1
     918:	08 95       	ret
     91a:	0c 94 2b 05 	jmp	0xa56	; 0xa56 <__fp_zero>
     91e:	67 2f       	mov	r22, r23
     920:	78 2f       	mov	r23, r24
     922:	88 27       	eor	r24, r24
     924:	b8 5f       	subi	r27, 0xF8	; 248
     926:	39 f0       	breq	.+14     	; 0x936 <__stack+0x37>
     928:	b9 3f       	cpi	r27, 0xF9	; 249
     92a:	cc f3       	brlt	.-14     	; 0x91e <__stack+0x1f>
     92c:	86 95       	lsr	r24
     92e:	77 95       	ror	r23
     930:	67 95       	ror	r22
     932:	b3 95       	inc	r27
     934:	d9 f7       	brne	.-10     	; 0x92c <__stack+0x2d>
     936:	3e f4       	brtc	.+14     	; 0x946 <__stack+0x47>
     938:	90 95       	com	r25
     93a:	80 95       	com	r24
     93c:	70 95       	com	r23
     93e:	61 95       	neg	r22
     940:	7f 4f       	sbci	r23, 0xFF	; 255
     942:	8f 4f       	sbci	r24, 0xFF	; 255
     944:	9f 4f       	sbci	r25, 0xFF	; 255
     946:	08 95       	ret

00000948 <__floatunsisf>:
     948:	e8 94       	clt
     94a:	09 c0       	rjmp	.+18     	; 0x95e <__floatsisf+0x12>

0000094c <__floatsisf>:
     94c:	97 fb       	bst	r25, 7
     94e:	3e f4       	brtc	.+14     	; 0x95e <__floatsisf+0x12>
     950:	90 95       	com	r25
     952:	80 95       	com	r24
     954:	70 95       	com	r23
     956:	61 95       	neg	r22
     958:	7f 4f       	sbci	r23, 0xFF	; 255
     95a:	8f 4f       	sbci	r24, 0xFF	; 255
     95c:	9f 4f       	sbci	r25, 0xFF	; 255
     95e:	99 23       	and	r25, r25
     960:	a9 f0       	breq	.+42     	; 0x98c <__floatsisf+0x40>
     962:	f9 2f       	mov	r31, r25
     964:	96 e9       	ldi	r25, 0x96	; 150
     966:	bb 27       	eor	r27, r27
     968:	93 95       	inc	r25
     96a:	f6 95       	lsr	r31
     96c:	87 95       	ror	r24
     96e:	77 95       	ror	r23
     970:	67 95       	ror	r22
     972:	b7 95       	ror	r27
     974:	f1 11       	cpse	r31, r1
     976:	f8 cf       	rjmp	.-16     	; 0x968 <__floatsisf+0x1c>
     978:	fa f4       	brpl	.+62     	; 0x9b8 <__floatsisf+0x6c>
     97a:	bb 0f       	add	r27, r27
     97c:	11 f4       	brne	.+4      	; 0x982 <__floatsisf+0x36>
     97e:	60 ff       	sbrs	r22, 0
     980:	1b c0       	rjmp	.+54     	; 0x9b8 <__floatsisf+0x6c>
     982:	6f 5f       	subi	r22, 0xFF	; 255
     984:	7f 4f       	sbci	r23, 0xFF	; 255
     986:	8f 4f       	sbci	r24, 0xFF	; 255
     988:	9f 4f       	sbci	r25, 0xFF	; 255
     98a:	16 c0       	rjmp	.+44     	; 0x9b8 <__floatsisf+0x6c>
     98c:	88 23       	and	r24, r24
     98e:	11 f0       	breq	.+4      	; 0x994 <__floatsisf+0x48>
     990:	96 e9       	ldi	r25, 0x96	; 150
     992:	11 c0       	rjmp	.+34     	; 0x9b6 <__floatsisf+0x6a>
     994:	77 23       	and	r23, r23
     996:	21 f0       	breq	.+8      	; 0x9a0 <__floatsisf+0x54>
     998:	9e e8       	ldi	r25, 0x8E	; 142
     99a:	87 2f       	mov	r24, r23
     99c:	76 2f       	mov	r23, r22
     99e:	05 c0       	rjmp	.+10     	; 0x9aa <__floatsisf+0x5e>
     9a0:	66 23       	and	r22, r22
     9a2:	71 f0       	breq	.+28     	; 0x9c0 <__floatsisf+0x74>
     9a4:	96 e8       	ldi	r25, 0x86	; 134
     9a6:	86 2f       	mov	r24, r22
     9a8:	70 e0       	ldi	r23, 0x00	; 0
     9aa:	60 e0       	ldi	r22, 0x00	; 0
     9ac:	2a f0       	brmi	.+10     	; 0x9b8 <__floatsisf+0x6c>
     9ae:	9a 95       	dec	r25
     9b0:	66 0f       	add	r22, r22
     9b2:	77 1f       	adc	r23, r23
     9b4:	88 1f       	adc	r24, r24
     9b6:	da f7       	brpl	.-10     	; 0x9ae <__floatsisf+0x62>
     9b8:	88 0f       	add	r24, r24
     9ba:	96 95       	lsr	r25
     9bc:	87 95       	ror	r24
     9be:	97 f9       	bld	r25, 7
     9c0:	08 95       	ret

000009c2 <__fp_inf>:
     9c2:	97 f9       	bld	r25, 7
     9c4:	9f 67       	ori	r25, 0x7F	; 127
     9c6:	80 e8       	ldi	r24, 0x80	; 128
     9c8:	70 e0       	ldi	r23, 0x00	; 0
     9ca:	60 e0       	ldi	r22, 0x00	; 0
     9cc:	08 95       	ret

000009ce <__fp_nan>:
     9ce:	9f ef       	ldi	r25, 0xFF	; 255
     9d0:	80 ec       	ldi	r24, 0xC0	; 192
     9d2:	08 95       	ret

000009d4 <__fp_pscA>:
     9d4:	00 24       	eor	r0, r0
     9d6:	0a 94       	dec	r0
     9d8:	16 16       	cp	r1, r22
     9da:	17 06       	cpc	r1, r23
     9dc:	18 06       	cpc	r1, r24
     9de:	09 06       	cpc	r0, r25
     9e0:	08 95       	ret

000009e2 <__fp_pscB>:
     9e2:	00 24       	eor	r0, r0
     9e4:	0a 94       	dec	r0
     9e6:	12 16       	cp	r1, r18
     9e8:	13 06       	cpc	r1, r19
     9ea:	14 06       	cpc	r1, r20
     9ec:	05 06       	cpc	r0, r21
     9ee:	08 95       	ret

000009f0 <__fp_round>:
     9f0:	09 2e       	mov	r0, r25
     9f2:	03 94       	inc	r0
     9f4:	00 0c       	add	r0, r0
     9f6:	11 f4       	brne	.+4      	; 0x9fc <__fp_round+0xc>
     9f8:	88 23       	and	r24, r24
     9fa:	52 f0       	brmi	.+20     	; 0xa10 <__fp_round+0x20>
     9fc:	bb 0f       	add	r27, r27
     9fe:	40 f4       	brcc	.+16     	; 0xa10 <__fp_round+0x20>
     a00:	bf 2b       	or	r27, r31
     a02:	11 f4       	brne	.+4      	; 0xa08 <__fp_round+0x18>
     a04:	60 ff       	sbrs	r22, 0
     a06:	04 c0       	rjmp	.+8      	; 0xa10 <__fp_round+0x20>
     a08:	6f 5f       	subi	r22, 0xFF	; 255
     a0a:	7f 4f       	sbci	r23, 0xFF	; 255
     a0c:	8f 4f       	sbci	r24, 0xFF	; 255
     a0e:	9f 4f       	sbci	r25, 0xFF	; 255
     a10:	08 95       	ret

00000a12 <__fp_split3>:
     a12:	57 fd       	sbrc	r21, 7
     a14:	90 58       	subi	r25, 0x80	; 128
     a16:	44 0f       	add	r20, r20
     a18:	55 1f       	adc	r21, r21
     a1a:	59 f0       	breq	.+22     	; 0xa32 <__fp_splitA+0x10>
     a1c:	5f 3f       	cpi	r21, 0xFF	; 255
     a1e:	71 f0       	breq	.+28     	; 0xa3c <__fp_splitA+0x1a>
     a20:	47 95       	ror	r20

00000a22 <__fp_splitA>:
     a22:	88 0f       	add	r24, r24
     a24:	97 fb       	bst	r25, 7
     a26:	99 1f       	adc	r25, r25
     a28:	61 f0       	breq	.+24     	; 0xa42 <__fp_splitA+0x20>
     a2a:	9f 3f       	cpi	r25, 0xFF	; 255
     a2c:	79 f0       	breq	.+30     	; 0xa4c <__fp_splitA+0x2a>
     a2e:	87 95       	ror	r24
     a30:	08 95       	ret
     a32:	12 16       	cp	r1, r18
     a34:	13 06       	cpc	r1, r19
     a36:	14 06       	cpc	r1, r20
     a38:	55 1f       	adc	r21, r21
     a3a:	f2 cf       	rjmp	.-28     	; 0xa20 <__fp_split3+0xe>
     a3c:	46 95       	lsr	r20
     a3e:	f1 df       	rcall	.-30     	; 0xa22 <__fp_splitA>
     a40:	08 c0       	rjmp	.+16     	; 0xa52 <__fp_splitA+0x30>
     a42:	16 16       	cp	r1, r22
     a44:	17 06       	cpc	r1, r23
     a46:	18 06       	cpc	r1, r24
     a48:	99 1f       	adc	r25, r25
     a4a:	f1 cf       	rjmp	.-30     	; 0xa2e <__fp_splitA+0xc>
     a4c:	86 95       	lsr	r24
     a4e:	71 05       	cpc	r23, r1
     a50:	61 05       	cpc	r22, r1
     a52:	08 94       	sec
     a54:	08 95       	ret

00000a56 <__fp_zero>:
     a56:	e8 94       	clt

00000a58 <__fp_szero>:
     a58:	bb 27       	eor	r27, r27
     a5a:	66 27       	eor	r22, r22
     a5c:	77 27       	eor	r23, r23
     a5e:	cb 01       	movw	r24, r22
     a60:	97 f9       	bld	r25, 7
     a62:	08 95       	ret

00000a64 <__mulsf3>:
     a64:	0e 94 45 05 	call	0xa8a	; 0xa8a <__mulsf3x>
     a68:	0c 94 f8 04 	jmp	0x9f0	; 0x9f0 <__fp_round>
     a6c:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <__fp_pscA>
     a70:	38 f0       	brcs	.+14     	; 0xa80 <__mulsf3+0x1c>
     a72:	0e 94 f1 04 	call	0x9e2	; 0x9e2 <__fp_pscB>
     a76:	20 f0       	brcs	.+8      	; 0xa80 <__mulsf3+0x1c>
     a78:	95 23       	and	r25, r21
     a7a:	11 f0       	breq	.+4      	; 0xa80 <__mulsf3+0x1c>
     a7c:	0c 94 e1 04 	jmp	0x9c2	; 0x9c2 <__fp_inf>
     a80:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_nan>
     a84:	11 24       	eor	r1, r1
     a86:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__fp_szero>

00000a8a <__mulsf3x>:
     a8a:	0e 94 09 05 	call	0xa12	; 0xa12 <__fp_split3>
     a8e:	70 f3       	brcs	.-36     	; 0xa6c <__mulsf3+0x8>

00000a90 <__mulsf3_pse>:
     a90:	95 9f       	mul	r25, r21
     a92:	c1 f3       	breq	.-16     	; 0xa84 <__mulsf3+0x20>
     a94:	95 0f       	add	r25, r21
     a96:	50 e0       	ldi	r21, 0x00	; 0
     a98:	55 1f       	adc	r21, r21
     a9a:	62 9f       	mul	r22, r18
     a9c:	f0 01       	movw	r30, r0
     a9e:	72 9f       	mul	r23, r18
     aa0:	bb 27       	eor	r27, r27
     aa2:	f0 0d       	add	r31, r0
     aa4:	b1 1d       	adc	r27, r1
     aa6:	63 9f       	mul	r22, r19
     aa8:	aa 27       	eor	r26, r26
     aaa:	f0 0d       	add	r31, r0
     aac:	b1 1d       	adc	r27, r1
     aae:	aa 1f       	adc	r26, r26
     ab0:	64 9f       	mul	r22, r20
     ab2:	66 27       	eor	r22, r22
     ab4:	b0 0d       	add	r27, r0
     ab6:	a1 1d       	adc	r26, r1
     ab8:	66 1f       	adc	r22, r22
     aba:	82 9f       	mul	r24, r18
     abc:	22 27       	eor	r18, r18
     abe:	b0 0d       	add	r27, r0
     ac0:	a1 1d       	adc	r26, r1
     ac2:	62 1f       	adc	r22, r18
     ac4:	73 9f       	mul	r23, r19
     ac6:	b0 0d       	add	r27, r0
     ac8:	a1 1d       	adc	r26, r1
     aca:	62 1f       	adc	r22, r18
     acc:	83 9f       	mul	r24, r19
     ace:	a0 0d       	add	r26, r0
     ad0:	61 1d       	adc	r22, r1
     ad2:	22 1f       	adc	r18, r18
     ad4:	74 9f       	mul	r23, r20
     ad6:	33 27       	eor	r19, r19
     ad8:	a0 0d       	add	r26, r0
     ada:	61 1d       	adc	r22, r1
     adc:	23 1f       	adc	r18, r19
     ade:	84 9f       	mul	r24, r20
     ae0:	60 0d       	add	r22, r0
     ae2:	21 1d       	adc	r18, r1
     ae4:	82 2f       	mov	r24, r18
     ae6:	76 2f       	mov	r23, r22
     ae8:	6a 2f       	mov	r22, r26
     aea:	11 24       	eor	r1, r1
     aec:	9f 57       	subi	r25, 0x7F	; 127
     aee:	50 40       	sbci	r21, 0x00	; 0
     af0:	9a f0       	brmi	.+38     	; 0xb18 <__mulsf3_pse+0x88>
     af2:	f1 f0       	breq	.+60     	; 0xb30 <__mulsf3_pse+0xa0>
     af4:	88 23       	and	r24, r24
     af6:	4a f0       	brmi	.+18     	; 0xb0a <__mulsf3_pse+0x7a>
     af8:	ee 0f       	add	r30, r30
     afa:	ff 1f       	adc	r31, r31
     afc:	bb 1f       	adc	r27, r27
     afe:	66 1f       	adc	r22, r22
     b00:	77 1f       	adc	r23, r23
     b02:	88 1f       	adc	r24, r24
     b04:	91 50       	subi	r25, 0x01	; 1
     b06:	50 40       	sbci	r21, 0x00	; 0
     b08:	a9 f7       	brne	.-22     	; 0xaf4 <__mulsf3_pse+0x64>
     b0a:	9e 3f       	cpi	r25, 0xFE	; 254
     b0c:	51 05       	cpc	r21, r1
     b0e:	80 f0       	brcs	.+32     	; 0xb30 <__mulsf3_pse+0xa0>
     b10:	0c 94 e1 04 	jmp	0x9c2	; 0x9c2 <__fp_inf>
     b14:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__fp_szero>
     b18:	5f 3f       	cpi	r21, 0xFF	; 255
     b1a:	e4 f3       	brlt	.-8      	; 0xb14 <__mulsf3_pse+0x84>
     b1c:	98 3e       	cpi	r25, 0xE8	; 232
     b1e:	d4 f3       	brlt	.-12     	; 0xb14 <__mulsf3_pse+0x84>
     b20:	86 95       	lsr	r24
     b22:	77 95       	ror	r23
     b24:	67 95       	ror	r22
     b26:	b7 95       	ror	r27
     b28:	f7 95       	ror	r31
     b2a:	e7 95       	ror	r30
     b2c:	9f 5f       	subi	r25, 0xFF	; 255
     b2e:	c1 f7       	brne	.-16     	; 0xb20 <__mulsf3_pse+0x90>
     b30:	fe 2b       	or	r31, r30
     b32:	88 0f       	add	r24, r24
     b34:	91 1d       	adc	r25, r1
     b36:	96 95       	lsr	r25
     b38:	87 95       	ror	r24
     b3a:	97 f9       	bld	r25, 7
     b3c:	08 95       	ret

00000b3e <round>:
     b3e:	0e 94 11 05 	call	0xa22	; 0xa22 <__fp_splitA>
     b42:	e8 f0       	brcs	.+58     	; 0xb7e <round+0x40>
     b44:	9e 37       	cpi	r25, 0x7E	; 126
     b46:	e8 f0       	brcs	.+58     	; 0xb82 <round+0x44>
     b48:	96 39       	cpi	r25, 0x96	; 150
     b4a:	b8 f4       	brcc	.+46     	; 0xb7a <round+0x3c>
     b4c:	9e 38       	cpi	r25, 0x8E	; 142
     b4e:	48 f4       	brcc	.+18     	; 0xb62 <round+0x24>
     b50:	67 2f       	mov	r22, r23
     b52:	78 2f       	mov	r23, r24
     b54:	88 27       	eor	r24, r24
     b56:	98 5f       	subi	r25, 0xF8	; 248
     b58:	f9 cf       	rjmp	.-14     	; 0xb4c <round+0xe>
     b5a:	86 95       	lsr	r24
     b5c:	77 95       	ror	r23
     b5e:	67 95       	ror	r22
     b60:	93 95       	inc	r25
     b62:	95 39       	cpi	r25, 0x95	; 149
     b64:	d0 f3       	brcs	.-12     	; 0xb5a <round+0x1c>
     b66:	b6 2f       	mov	r27, r22
     b68:	b1 70       	andi	r27, 0x01	; 1
     b6a:	6b 0f       	add	r22, r27
     b6c:	71 1d       	adc	r23, r1
     b6e:	81 1d       	adc	r24, r1
     b70:	20 f4       	brcc	.+8      	; 0xb7a <round+0x3c>
     b72:	87 95       	ror	r24
     b74:	77 95       	ror	r23
     b76:	67 95       	ror	r22
     b78:	93 95       	inc	r25
     b7a:	0c 94 c3 05 	jmp	0xb86	; 0xb86 <__fp_mintl>
     b7e:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__fp_mpack>
     b82:	0c 94 2c 05 	jmp	0xa58	; 0xa58 <__fp_szero>

00000b86 <__fp_mintl>:
     b86:	88 23       	and	r24, r24
     b88:	71 f4       	brne	.+28     	; 0xba6 <__fp_mintl+0x20>
     b8a:	77 23       	and	r23, r23
     b8c:	21 f0       	breq	.+8      	; 0xb96 <__fp_mintl+0x10>
     b8e:	98 50       	subi	r25, 0x08	; 8
     b90:	87 2b       	or	r24, r23
     b92:	76 2f       	mov	r23, r22
     b94:	07 c0       	rjmp	.+14     	; 0xba4 <__fp_mintl+0x1e>
     b96:	66 23       	and	r22, r22
     b98:	11 f4       	brne	.+4      	; 0xb9e <__fp_mintl+0x18>
     b9a:	99 27       	eor	r25, r25
     b9c:	0d c0       	rjmp	.+26     	; 0xbb8 <__fp_mintl+0x32>
     b9e:	90 51       	subi	r25, 0x10	; 16
     ba0:	86 2b       	or	r24, r22
     ba2:	70 e0       	ldi	r23, 0x00	; 0
     ba4:	60 e0       	ldi	r22, 0x00	; 0
     ba6:	2a f0       	brmi	.+10     	; 0xbb2 <__fp_mintl+0x2c>
     ba8:	9a 95       	dec	r25
     baa:	66 0f       	add	r22, r22
     bac:	77 1f       	adc	r23, r23
     bae:	88 1f       	adc	r24, r24
     bb0:	da f7       	brpl	.-10     	; 0xba8 <__fp_mintl+0x22>
     bb2:	88 0f       	add	r24, r24
     bb4:	96 95       	lsr	r25
     bb6:	87 95       	ror	r24
     bb8:	97 f9       	bld	r25, 7
     bba:	08 95       	ret

00000bbc <__fp_mpack>:
     bbc:	9f 3f       	cpi	r25, 0xFF	; 255
     bbe:	31 f0       	breq	.+12     	; 0xbcc <__fp_mpack_finite+0xc>

00000bc0 <__fp_mpack_finite>:
     bc0:	91 50       	subi	r25, 0x01	; 1
     bc2:	20 f4       	brcc	.+8      	; 0xbcc <__fp_mpack_finite+0xc>
     bc4:	87 95       	ror	r24
     bc6:	77 95       	ror	r23
     bc8:	67 95       	ror	r22
     bca:	b7 95       	ror	r27
     bcc:	88 0f       	add	r24, r24
     bce:	91 1d       	adc	r25, r1
     bd0:	96 95       	lsr	r25
     bd2:	87 95       	ror	r24
     bd4:	97 f9       	bld	r25, 7
     bd6:	08 95       	ret

00000bd8 <snprintf>:
     bd8:	ae e0       	ldi	r26, 0x0E	; 14
     bda:	b0 e0       	ldi	r27, 0x00	; 0
     bdc:	e2 ef       	ldi	r30, 0xF2	; 242
     bde:	f5 e0       	ldi	r31, 0x05	; 5
     be0:	0c 94 bb 08 	jmp	0x1176	; 0x1176 <__prologue_saves__+0x1c>
     be4:	0d 89       	ldd	r16, Y+21	; 0x15
     be6:	1e 89       	ldd	r17, Y+22	; 0x16
     be8:	8f 89       	ldd	r24, Y+23	; 0x17
     bea:	98 8d       	ldd	r25, Y+24	; 0x18
     bec:	26 e0       	ldi	r18, 0x06	; 6
     bee:	2c 83       	std	Y+4, r18	; 0x04
     bf0:	1a 83       	std	Y+2, r17	; 0x02
     bf2:	09 83       	std	Y+1, r16	; 0x01
     bf4:	97 ff       	sbrs	r25, 7
     bf6:	02 c0       	rjmp	.+4      	; 0xbfc <snprintf+0x24>
     bf8:	80 e0       	ldi	r24, 0x00	; 0
     bfa:	90 e8       	ldi	r25, 0x80	; 128
     bfc:	01 97       	sbiw	r24, 0x01	; 1
     bfe:	9e 83       	std	Y+6, r25	; 0x06
     c00:	8d 83       	std	Y+5, r24	; 0x05
     c02:	ae 01       	movw	r20, r28
     c04:	45 5e       	subi	r20, 0xE5	; 229
     c06:	5f 4f       	sbci	r21, 0xFF	; 255
     c08:	69 8d       	ldd	r22, Y+25	; 0x19
     c0a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     c0c:	ce 01       	movw	r24, r28
     c0e:	01 96       	adiw	r24, 0x01	; 1
     c10:	0e 94 1c 06 	call	0xc38	; 0xc38 <vfprintf>
     c14:	4d 81       	ldd	r20, Y+5	; 0x05
     c16:	5e 81       	ldd	r21, Y+6	; 0x06
     c18:	57 fd       	sbrc	r21, 7
     c1a:	0a c0       	rjmp	.+20     	; 0xc30 <snprintf+0x58>
     c1c:	2f 81       	ldd	r18, Y+7	; 0x07
     c1e:	38 85       	ldd	r19, Y+8	; 0x08
     c20:	42 17       	cp	r20, r18
     c22:	53 07       	cpc	r21, r19
     c24:	0c f4       	brge	.+2      	; 0xc28 <snprintf+0x50>
     c26:	9a 01       	movw	r18, r20
     c28:	f8 01       	movw	r30, r16
     c2a:	e2 0f       	add	r30, r18
     c2c:	f3 1f       	adc	r31, r19
     c2e:	10 82       	st	Z, r1
     c30:	2e 96       	adiw	r28, 0x0e	; 14
     c32:	e4 e0       	ldi	r30, 0x04	; 4
     c34:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__epilogue_restores__+0x1c>

00000c38 <vfprintf>:
     c38:	ab e0       	ldi	r26, 0x0B	; 11
     c3a:	b0 e0       	ldi	r27, 0x00	; 0
     c3c:	e2 e2       	ldi	r30, 0x22	; 34
     c3e:	f6 e0       	ldi	r31, 0x06	; 6
     c40:	0c 94 ad 08 	jmp	0x115a	; 0x115a <__prologue_saves__>
     c44:	6c 01       	movw	r12, r24
     c46:	7b 01       	movw	r14, r22
     c48:	8a 01       	movw	r16, r20
     c4a:	fc 01       	movw	r30, r24
     c4c:	17 82       	std	Z+7, r1	; 0x07
     c4e:	16 82       	std	Z+6, r1	; 0x06
     c50:	83 81       	ldd	r24, Z+3	; 0x03
     c52:	81 ff       	sbrs	r24, 1
     c54:	cc c1       	rjmp	.+920    	; 0xfee <vfprintf+0x3b6>
     c56:	ce 01       	movw	r24, r28
     c58:	01 96       	adiw	r24, 0x01	; 1
     c5a:	3c 01       	movw	r6, r24
     c5c:	f6 01       	movw	r30, r12
     c5e:	93 81       	ldd	r25, Z+3	; 0x03
     c60:	f7 01       	movw	r30, r14
     c62:	93 fd       	sbrc	r25, 3
     c64:	85 91       	lpm	r24, Z+
     c66:	93 ff       	sbrs	r25, 3
     c68:	81 91       	ld	r24, Z+
     c6a:	7f 01       	movw	r14, r30
     c6c:	88 23       	and	r24, r24
     c6e:	09 f4       	brne	.+2      	; 0xc72 <vfprintf+0x3a>
     c70:	ba c1       	rjmp	.+884    	; 0xfe6 <vfprintf+0x3ae>
     c72:	85 32       	cpi	r24, 0x25	; 37
     c74:	39 f4       	brne	.+14     	; 0xc84 <vfprintf+0x4c>
     c76:	93 fd       	sbrc	r25, 3
     c78:	85 91       	lpm	r24, Z+
     c7a:	93 ff       	sbrs	r25, 3
     c7c:	81 91       	ld	r24, Z+
     c7e:	7f 01       	movw	r14, r30
     c80:	85 32       	cpi	r24, 0x25	; 37
     c82:	29 f4       	brne	.+10     	; 0xc8e <vfprintf+0x56>
     c84:	b6 01       	movw	r22, r12
     c86:	90 e0       	ldi	r25, 0x00	; 0
     c88:	0e 94 13 08 	call	0x1026	; 0x1026 <fputc>
     c8c:	e7 cf       	rjmp	.-50     	; 0xc5c <vfprintf+0x24>
     c8e:	91 2c       	mov	r9, r1
     c90:	21 2c       	mov	r2, r1
     c92:	31 2c       	mov	r3, r1
     c94:	ff e1       	ldi	r31, 0x1F	; 31
     c96:	f3 15       	cp	r31, r3
     c98:	d8 f0       	brcs	.+54     	; 0xcd0 <vfprintf+0x98>
     c9a:	8b 32       	cpi	r24, 0x2B	; 43
     c9c:	79 f0       	breq	.+30     	; 0xcbc <vfprintf+0x84>
     c9e:	38 f4       	brcc	.+14     	; 0xcae <vfprintf+0x76>
     ca0:	80 32       	cpi	r24, 0x20	; 32
     ca2:	79 f0       	breq	.+30     	; 0xcc2 <vfprintf+0x8a>
     ca4:	83 32       	cpi	r24, 0x23	; 35
     ca6:	a1 f4       	brne	.+40     	; 0xcd0 <vfprintf+0x98>
     ca8:	23 2d       	mov	r18, r3
     caa:	20 61       	ori	r18, 0x10	; 16
     cac:	1d c0       	rjmp	.+58     	; 0xce8 <vfprintf+0xb0>
     cae:	8d 32       	cpi	r24, 0x2D	; 45
     cb0:	61 f0       	breq	.+24     	; 0xcca <vfprintf+0x92>
     cb2:	80 33       	cpi	r24, 0x30	; 48
     cb4:	69 f4       	brne	.+26     	; 0xcd0 <vfprintf+0x98>
     cb6:	23 2d       	mov	r18, r3
     cb8:	21 60       	ori	r18, 0x01	; 1
     cba:	16 c0       	rjmp	.+44     	; 0xce8 <vfprintf+0xb0>
     cbc:	83 2d       	mov	r24, r3
     cbe:	82 60       	ori	r24, 0x02	; 2
     cc0:	38 2e       	mov	r3, r24
     cc2:	e3 2d       	mov	r30, r3
     cc4:	e4 60       	ori	r30, 0x04	; 4
     cc6:	3e 2e       	mov	r3, r30
     cc8:	2a c0       	rjmp	.+84     	; 0xd1e <vfprintf+0xe6>
     cca:	f3 2d       	mov	r31, r3
     ccc:	f8 60       	ori	r31, 0x08	; 8
     cce:	1d c0       	rjmp	.+58     	; 0xd0a <vfprintf+0xd2>
     cd0:	37 fc       	sbrc	r3, 7
     cd2:	2d c0       	rjmp	.+90     	; 0xd2e <vfprintf+0xf6>
     cd4:	20 ed       	ldi	r18, 0xD0	; 208
     cd6:	28 0f       	add	r18, r24
     cd8:	2a 30       	cpi	r18, 0x0A	; 10
     cda:	40 f0       	brcs	.+16     	; 0xcec <vfprintf+0xb4>
     cdc:	8e 32       	cpi	r24, 0x2E	; 46
     cde:	b9 f4       	brne	.+46     	; 0xd0e <vfprintf+0xd6>
     ce0:	36 fc       	sbrc	r3, 6
     ce2:	81 c1       	rjmp	.+770    	; 0xfe6 <vfprintf+0x3ae>
     ce4:	23 2d       	mov	r18, r3
     ce6:	20 64       	ori	r18, 0x40	; 64
     ce8:	32 2e       	mov	r3, r18
     cea:	19 c0       	rjmp	.+50     	; 0xd1e <vfprintf+0xe6>
     cec:	36 fe       	sbrs	r3, 6
     cee:	06 c0       	rjmp	.+12     	; 0xcfc <vfprintf+0xc4>
     cf0:	8a e0       	ldi	r24, 0x0A	; 10
     cf2:	98 9e       	mul	r9, r24
     cf4:	20 0d       	add	r18, r0
     cf6:	11 24       	eor	r1, r1
     cf8:	92 2e       	mov	r9, r18
     cfa:	11 c0       	rjmp	.+34     	; 0xd1e <vfprintf+0xe6>
     cfc:	ea e0       	ldi	r30, 0x0A	; 10
     cfe:	2e 9e       	mul	r2, r30
     d00:	20 0d       	add	r18, r0
     d02:	11 24       	eor	r1, r1
     d04:	22 2e       	mov	r2, r18
     d06:	f3 2d       	mov	r31, r3
     d08:	f0 62       	ori	r31, 0x20	; 32
     d0a:	3f 2e       	mov	r3, r31
     d0c:	08 c0       	rjmp	.+16     	; 0xd1e <vfprintf+0xe6>
     d0e:	8c 36       	cpi	r24, 0x6C	; 108
     d10:	21 f4       	brne	.+8      	; 0xd1a <vfprintf+0xe2>
     d12:	83 2d       	mov	r24, r3
     d14:	80 68       	ori	r24, 0x80	; 128
     d16:	38 2e       	mov	r3, r24
     d18:	02 c0       	rjmp	.+4      	; 0xd1e <vfprintf+0xe6>
     d1a:	88 36       	cpi	r24, 0x68	; 104
     d1c:	41 f4       	brne	.+16     	; 0xd2e <vfprintf+0xf6>
     d1e:	f7 01       	movw	r30, r14
     d20:	93 fd       	sbrc	r25, 3
     d22:	85 91       	lpm	r24, Z+
     d24:	93 ff       	sbrs	r25, 3
     d26:	81 91       	ld	r24, Z+
     d28:	7f 01       	movw	r14, r30
     d2a:	81 11       	cpse	r24, r1
     d2c:	b3 cf       	rjmp	.-154    	; 0xc94 <vfprintf+0x5c>
     d2e:	98 2f       	mov	r25, r24
     d30:	9f 7d       	andi	r25, 0xDF	; 223
     d32:	95 54       	subi	r25, 0x45	; 69
     d34:	93 30       	cpi	r25, 0x03	; 3
     d36:	28 f4       	brcc	.+10     	; 0xd42 <vfprintf+0x10a>
     d38:	0c 5f       	subi	r16, 0xFC	; 252
     d3a:	1f 4f       	sbci	r17, 0xFF	; 255
     d3c:	9f e3       	ldi	r25, 0x3F	; 63
     d3e:	99 83       	std	Y+1, r25	; 0x01
     d40:	0d c0       	rjmp	.+26     	; 0xd5c <vfprintf+0x124>
     d42:	83 36       	cpi	r24, 0x63	; 99
     d44:	31 f0       	breq	.+12     	; 0xd52 <vfprintf+0x11a>
     d46:	83 37       	cpi	r24, 0x73	; 115
     d48:	71 f0       	breq	.+28     	; 0xd66 <vfprintf+0x12e>
     d4a:	83 35       	cpi	r24, 0x53	; 83
     d4c:	09 f0       	breq	.+2      	; 0xd50 <vfprintf+0x118>
     d4e:	59 c0       	rjmp	.+178    	; 0xe02 <vfprintf+0x1ca>
     d50:	21 c0       	rjmp	.+66     	; 0xd94 <vfprintf+0x15c>
     d52:	f8 01       	movw	r30, r16
     d54:	80 81       	ld	r24, Z
     d56:	89 83       	std	Y+1, r24	; 0x01
     d58:	0e 5f       	subi	r16, 0xFE	; 254
     d5a:	1f 4f       	sbci	r17, 0xFF	; 255
     d5c:	88 24       	eor	r8, r8
     d5e:	83 94       	inc	r8
     d60:	91 2c       	mov	r9, r1
     d62:	53 01       	movw	r10, r6
     d64:	13 c0       	rjmp	.+38     	; 0xd8c <vfprintf+0x154>
     d66:	28 01       	movw	r4, r16
     d68:	f2 e0       	ldi	r31, 0x02	; 2
     d6a:	4f 0e       	add	r4, r31
     d6c:	51 1c       	adc	r5, r1
     d6e:	f8 01       	movw	r30, r16
     d70:	a0 80       	ld	r10, Z
     d72:	b1 80       	ldd	r11, Z+1	; 0x01
     d74:	36 fe       	sbrs	r3, 6
     d76:	03 c0       	rjmp	.+6      	; 0xd7e <vfprintf+0x146>
     d78:	69 2d       	mov	r22, r9
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	02 c0       	rjmp	.+4      	; 0xd82 <vfprintf+0x14a>
     d7e:	6f ef       	ldi	r22, 0xFF	; 255
     d80:	7f ef       	ldi	r23, 0xFF	; 255
     d82:	c5 01       	movw	r24, r10
     d84:	0e 94 08 08 	call	0x1010	; 0x1010 <strnlen>
     d88:	4c 01       	movw	r8, r24
     d8a:	82 01       	movw	r16, r4
     d8c:	f3 2d       	mov	r31, r3
     d8e:	ff 77       	andi	r31, 0x7F	; 127
     d90:	3f 2e       	mov	r3, r31
     d92:	16 c0       	rjmp	.+44     	; 0xdc0 <vfprintf+0x188>
     d94:	28 01       	movw	r4, r16
     d96:	22 e0       	ldi	r18, 0x02	; 2
     d98:	42 0e       	add	r4, r18
     d9a:	51 1c       	adc	r5, r1
     d9c:	f8 01       	movw	r30, r16
     d9e:	a0 80       	ld	r10, Z
     da0:	b1 80       	ldd	r11, Z+1	; 0x01
     da2:	36 fe       	sbrs	r3, 6
     da4:	03 c0       	rjmp	.+6      	; 0xdac <vfprintf+0x174>
     da6:	69 2d       	mov	r22, r9
     da8:	70 e0       	ldi	r23, 0x00	; 0
     daa:	02 c0       	rjmp	.+4      	; 0xdb0 <vfprintf+0x178>
     dac:	6f ef       	ldi	r22, 0xFF	; 255
     dae:	7f ef       	ldi	r23, 0xFF	; 255
     db0:	c5 01       	movw	r24, r10
     db2:	0e 94 fd 07 	call	0xffa	; 0xffa <strnlen_P>
     db6:	4c 01       	movw	r8, r24
     db8:	f3 2d       	mov	r31, r3
     dba:	f0 68       	ori	r31, 0x80	; 128
     dbc:	3f 2e       	mov	r3, r31
     dbe:	82 01       	movw	r16, r4
     dc0:	33 fc       	sbrc	r3, 3
     dc2:	1b c0       	rjmp	.+54     	; 0xdfa <vfprintf+0x1c2>
     dc4:	82 2d       	mov	r24, r2
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	88 16       	cp	r8, r24
     dca:	99 06       	cpc	r9, r25
     dcc:	b0 f4       	brcc	.+44     	; 0xdfa <vfprintf+0x1c2>
     dce:	b6 01       	movw	r22, r12
     dd0:	80 e2       	ldi	r24, 0x20	; 32
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	0e 94 13 08 	call	0x1026	; 0x1026 <fputc>
     dd8:	2a 94       	dec	r2
     dda:	f4 cf       	rjmp	.-24     	; 0xdc4 <vfprintf+0x18c>
     ddc:	f5 01       	movw	r30, r10
     dde:	37 fc       	sbrc	r3, 7
     de0:	85 91       	lpm	r24, Z+
     de2:	37 fe       	sbrs	r3, 7
     de4:	81 91       	ld	r24, Z+
     de6:	5f 01       	movw	r10, r30
     de8:	b6 01       	movw	r22, r12
     dea:	90 e0       	ldi	r25, 0x00	; 0
     dec:	0e 94 13 08 	call	0x1026	; 0x1026 <fputc>
     df0:	21 10       	cpse	r2, r1
     df2:	2a 94       	dec	r2
     df4:	21 e0       	ldi	r18, 0x01	; 1
     df6:	82 1a       	sub	r8, r18
     df8:	91 08       	sbc	r9, r1
     dfa:	81 14       	cp	r8, r1
     dfc:	91 04       	cpc	r9, r1
     dfe:	71 f7       	brne	.-36     	; 0xddc <vfprintf+0x1a4>
     e00:	e8 c0       	rjmp	.+464    	; 0xfd2 <vfprintf+0x39a>
     e02:	84 36       	cpi	r24, 0x64	; 100
     e04:	11 f0       	breq	.+4      	; 0xe0a <vfprintf+0x1d2>
     e06:	89 36       	cpi	r24, 0x69	; 105
     e08:	41 f5       	brne	.+80     	; 0xe5a <vfprintf+0x222>
     e0a:	f8 01       	movw	r30, r16
     e0c:	37 fe       	sbrs	r3, 7
     e0e:	07 c0       	rjmp	.+14     	; 0xe1e <vfprintf+0x1e6>
     e10:	60 81       	ld	r22, Z
     e12:	71 81       	ldd	r23, Z+1	; 0x01
     e14:	82 81       	ldd	r24, Z+2	; 0x02
     e16:	93 81       	ldd	r25, Z+3	; 0x03
     e18:	0c 5f       	subi	r16, 0xFC	; 252
     e1a:	1f 4f       	sbci	r17, 0xFF	; 255
     e1c:	08 c0       	rjmp	.+16     	; 0xe2e <vfprintf+0x1f6>
     e1e:	60 81       	ld	r22, Z
     e20:	71 81       	ldd	r23, Z+1	; 0x01
     e22:	07 2e       	mov	r0, r23
     e24:	00 0c       	add	r0, r0
     e26:	88 0b       	sbc	r24, r24
     e28:	99 0b       	sbc	r25, r25
     e2a:	0e 5f       	subi	r16, 0xFE	; 254
     e2c:	1f 4f       	sbci	r17, 0xFF	; 255
     e2e:	f3 2d       	mov	r31, r3
     e30:	ff 76       	andi	r31, 0x6F	; 111
     e32:	3f 2e       	mov	r3, r31
     e34:	97 ff       	sbrs	r25, 7
     e36:	09 c0       	rjmp	.+18     	; 0xe4a <vfprintf+0x212>
     e38:	90 95       	com	r25
     e3a:	80 95       	com	r24
     e3c:	70 95       	com	r23
     e3e:	61 95       	neg	r22
     e40:	7f 4f       	sbci	r23, 0xFF	; 255
     e42:	8f 4f       	sbci	r24, 0xFF	; 255
     e44:	9f 4f       	sbci	r25, 0xFF	; 255
     e46:	f0 68       	ori	r31, 0x80	; 128
     e48:	3f 2e       	mov	r3, r31
     e4a:	2a e0       	ldi	r18, 0x0A	; 10
     e4c:	30 e0       	ldi	r19, 0x00	; 0
     e4e:	a3 01       	movw	r20, r6
     e50:	0e 94 4f 08 	call	0x109e	; 0x109e <__ultoa_invert>
     e54:	88 2e       	mov	r8, r24
     e56:	86 18       	sub	r8, r6
     e58:	45 c0       	rjmp	.+138    	; 0xee4 <vfprintf+0x2ac>
     e5a:	85 37       	cpi	r24, 0x75	; 117
     e5c:	31 f4       	brne	.+12     	; 0xe6a <vfprintf+0x232>
     e5e:	23 2d       	mov	r18, r3
     e60:	2f 7e       	andi	r18, 0xEF	; 239
     e62:	b2 2e       	mov	r11, r18
     e64:	2a e0       	ldi	r18, 0x0A	; 10
     e66:	30 e0       	ldi	r19, 0x00	; 0
     e68:	25 c0       	rjmp	.+74     	; 0xeb4 <vfprintf+0x27c>
     e6a:	93 2d       	mov	r25, r3
     e6c:	99 7f       	andi	r25, 0xF9	; 249
     e6e:	b9 2e       	mov	r11, r25
     e70:	8f 36       	cpi	r24, 0x6F	; 111
     e72:	c1 f0       	breq	.+48     	; 0xea4 <vfprintf+0x26c>
     e74:	18 f4       	brcc	.+6      	; 0xe7c <vfprintf+0x244>
     e76:	88 35       	cpi	r24, 0x58	; 88
     e78:	79 f0       	breq	.+30     	; 0xe98 <vfprintf+0x260>
     e7a:	b5 c0       	rjmp	.+362    	; 0xfe6 <vfprintf+0x3ae>
     e7c:	80 37       	cpi	r24, 0x70	; 112
     e7e:	19 f0       	breq	.+6      	; 0xe86 <vfprintf+0x24e>
     e80:	88 37       	cpi	r24, 0x78	; 120
     e82:	21 f0       	breq	.+8      	; 0xe8c <vfprintf+0x254>
     e84:	b0 c0       	rjmp	.+352    	; 0xfe6 <vfprintf+0x3ae>
     e86:	e9 2f       	mov	r30, r25
     e88:	e0 61       	ori	r30, 0x10	; 16
     e8a:	be 2e       	mov	r11, r30
     e8c:	b4 fe       	sbrs	r11, 4
     e8e:	0d c0       	rjmp	.+26     	; 0xeaa <vfprintf+0x272>
     e90:	fb 2d       	mov	r31, r11
     e92:	f4 60       	ori	r31, 0x04	; 4
     e94:	bf 2e       	mov	r11, r31
     e96:	09 c0       	rjmp	.+18     	; 0xeaa <vfprintf+0x272>
     e98:	34 fe       	sbrs	r3, 4
     e9a:	0a c0       	rjmp	.+20     	; 0xeb0 <vfprintf+0x278>
     e9c:	29 2f       	mov	r18, r25
     e9e:	26 60       	ori	r18, 0x06	; 6
     ea0:	b2 2e       	mov	r11, r18
     ea2:	06 c0       	rjmp	.+12     	; 0xeb0 <vfprintf+0x278>
     ea4:	28 e0       	ldi	r18, 0x08	; 8
     ea6:	30 e0       	ldi	r19, 0x00	; 0
     ea8:	05 c0       	rjmp	.+10     	; 0xeb4 <vfprintf+0x27c>
     eaa:	20 e1       	ldi	r18, 0x10	; 16
     eac:	30 e0       	ldi	r19, 0x00	; 0
     eae:	02 c0       	rjmp	.+4      	; 0xeb4 <vfprintf+0x27c>
     eb0:	20 e1       	ldi	r18, 0x10	; 16
     eb2:	32 e0       	ldi	r19, 0x02	; 2
     eb4:	f8 01       	movw	r30, r16
     eb6:	b7 fe       	sbrs	r11, 7
     eb8:	07 c0       	rjmp	.+14     	; 0xec8 <vfprintf+0x290>
     eba:	60 81       	ld	r22, Z
     ebc:	71 81       	ldd	r23, Z+1	; 0x01
     ebe:	82 81       	ldd	r24, Z+2	; 0x02
     ec0:	93 81       	ldd	r25, Z+3	; 0x03
     ec2:	0c 5f       	subi	r16, 0xFC	; 252
     ec4:	1f 4f       	sbci	r17, 0xFF	; 255
     ec6:	06 c0       	rjmp	.+12     	; 0xed4 <vfprintf+0x29c>
     ec8:	60 81       	ld	r22, Z
     eca:	71 81       	ldd	r23, Z+1	; 0x01
     ecc:	80 e0       	ldi	r24, 0x00	; 0
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	0e 5f       	subi	r16, 0xFE	; 254
     ed2:	1f 4f       	sbci	r17, 0xFF	; 255
     ed4:	a3 01       	movw	r20, r6
     ed6:	0e 94 4f 08 	call	0x109e	; 0x109e <__ultoa_invert>
     eda:	88 2e       	mov	r8, r24
     edc:	86 18       	sub	r8, r6
     ede:	fb 2d       	mov	r31, r11
     ee0:	ff 77       	andi	r31, 0x7F	; 127
     ee2:	3f 2e       	mov	r3, r31
     ee4:	36 fe       	sbrs	r3, 6
     ee6:	0d c0       	rjmp	.+26     	; 0xf02 <vfprintf+0x2ca>
     ee8:	23 2d       	mov	r18, r3
     eea:	2e 7f       	andi	r18, 0xFE	; 254
     eec:	a2 2e       	mov	r10, r18
     eee:	89 14       	cp	r8, r9
     ef0:	58 f4       	brcc	.+22     	; 0xf08 <vfprintf+0x2d0>
     ef2:	34 fe       	sbrs	r3, 4
     ef4:	0b c0       	rjmp	.+22     	; 0xf0c <vfprintf+0x2d4>
     ef6:	32 fc       	sbrc	r3, 2
     ef8:	09 c0       	rjmp	.+18     	; 0xf0c <vfprintf+0x2d4>
     efa:	83 2d       	mov	r24, r3
     efc:	8e 7e       	andi	r24, 0xEE	; 238
     efe:	a8 2e       	mov	r10, r24
     f00:	05 c0       	rjmp	.+10     	; 0xf0c <vfprintf+0x2d4>
     f02:	b8 2c       	mov	r11, r8
     f04:	a3 2c       	mov	r10, r3
     f06:	03 c0       	rjmp	.+6      	; 0xf0e <vfprintf+0x2d6>
     f08:	b8 2c       	mov	r11, r8
     f0a:	01 c0       	rjmp	.+2      	; 0xf0e <vfprintf+0x2d6>
     f0c:	b9 2c       	mov	r11, r9
     f0e:	a4 fe       	sbrs	r10, 4
     f10:	0f c0       	rjmp	.+30     	; 0xf30 <vfprintf+0x2f8>
     f12:	fe 01       	movw	r30, r28
     f14:	e8 0d       	add	r30, r8
     f16:	f1 1d       	adc	r31, r1
     f18:	80 81       	ld	r24, Z
     f1a:	80 33       	cpi	r24, 0x30	; 48
     f1c:	21 f4       	brne	.+8      	; 0xf26 <vfprintf+0x2ee>
     f1e:	9a 2d       	mov	r25, r10
     f20:	99 7e       	andi	r25, 0xE9	; 233
     f22:	a9 2e       	mov	r10, r25
     f24:	09 c0       	rjmp	.+18     	; 0xf38 <vfprintf+0x300>
     f26:	a2 fe       	sbrs	r10, 2
     f28:	06 c0       	rjmp	.+12     	; 0xf36 <vfprintf+0x2fe>
     f2a:	b3 94       	inc	r11
     f2c:	b3 94       	inc	r11
     f2e:	04 c0       	rjmp	.+8      	; 0xf38 <vfprintf+0x300>
     f30:	8a 2d       	mov	r24, r10
     f32:	86 78       	andi	r24, 0x86	; 134
     f34:	09 f0       	breq	.+2      	; 0xf38 <vfprintf+0x300>
     f36:	b3 94       	inc	r11
     f38:	a3 fc       	sbrc	r10, 3
     f3a:	11 c0       	rjmp	.+34     	; 0xf5e <vfprintf+0x326>
     f3c:	a0 fe       	sbrs	r10, 0
     f3e:	06 c0       	rjmp	.+12     	; 0xf4c <vfprintf+0x314>
     f40:	b2 14       	cp	r11, r2
     f42:	88 f4       	brcc	.+34     	; 0xf66 <vfprintf+0x32e>
     f44:	28 0c       	add	r2, r8
     f46:	92 2c       	mov	r9, r2
     f48:	9b 18       	sub	r9, r11
     f4a:	0e c0       	rjmp	.+28     	; 0xf68 <vfprintf+0x330>
     f4c:	b2 14       	cp	r11, r2
     f4e:	60 f4       	brcc	.+24     	; 0xf68 <vfprintf+0x330>
     f50:	b6 01       	movw	r22, r12
     f52:	80 e2       	ldi	r24, 0x20	; 32
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	0e 94 13 08 	call	0x1026	; 0x1026 <fputc>
     f5a:	b3 94       	inc	r11
     f5c:	f7 cf       	rjmp	.-18     	; 0xf4c <vfprintf+0x314>
     f5e:	b2 14       	cp	r11, r2
     f60:	18 f4       	brcc	.+6      	; 0xf68 <vfprintf+0x330>
     f62:	2b 18       	sub	r2, r11
     f64:	02 c0       	rjmp	.+4      	; 0xf6a <vfprintf+0x332>
     f66:	98 2c       	mov	r9, r8
     f68:	21 2c       	mov	r2, r1
     f6a:	a4 fe       	sbrs	r10, 4
     f6c:	10 c0       	rjmp	.+32     	; 0xf8e <vfprintf+0x356>
     f6e:	b6 01       	movw	r22, r12
     f70:	80 e3       	ldi	r24, 0x30	; 48
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	0e 94 13 08 	call	0x1026	; 0x1026 <fputc>
     f78:	a2 fe       	sbrs	r10, 2
     f7a:	17 c0       	rjmp	.+46     	; 0xfaa <vfprintf+0x372>
     f7c:	a1 fc       	sbrc	r10, 1
     f7e:	03 c0       	rjmp	.+6      	; 0xf86 <vfprintf+0x34e>
     f80:	88 e7       	ldi	r24, 0x78	; 120
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	02 c0       	rjmp	.+4      	; 0xf8a <vfprintf+0x352>
     f86:	88 e5       	ldi	r24, 0x58	; 88
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	b6 01       	movw	r22, r12
     f8c:	0c c0       	rjmp	.+24     	; 0xfa6 <vfprintf+0x36e>
     f8e:	8a 2d       	mov	r24, r10
     f90:	86 78       	andi	r24, 0x86	; 134
     f92:	59 f0       	breq	.+22     	; 0xfaa <vfprintf+0x372>
     f94:	a1 fe       	sbrs	r10, 1
     f96:	02 c0       	rjmp	.+4      	; 0xf9c <vfprintf+0x364>
     f98:	8b e2       	ldi	r24, 0x2B	; 43
     f9a:	01 c0       	rjmp	.+2      	; 0xf9e <vfprintf+0x366>
     f9c:	80 e2       	ldi	r24, 0x20	; 32
     f9e:	a7 fc       	sbrc	r10, 7
     fa0:	8d e2       	ldi	r24, 0x2D	; 45
     fa2:	b6 01       	movw	r22, r12
     fa4:	90 e0       	ldi	r25, 0x00	; 0
     fa6:	0e 94 13 08 	call	0x1026	; 0x1026 <fputc>
     faa:	89 14       	cp	r8, r9
     fac:	38 f4       	brcc	.+14     	; 0xfbc <vfprintf+0x384>
     fae:	b6 01       	movw	r22, r12
     fb0:	80 e3       	ldi	r24, 0x30	; 48
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	0e 94 13 08 	call	0x1026	; 0x1026 <fputc>
     fb8:	9a 94       	dec	r9
     fba:	f7 cf       	rjmp	.-18     	; 0xfaa <vfprintf+0x372>
     fbc:	8a 94       	dec	r8
     fbe:	f3 01       	movw	r30, r6
     fc0:	e8 0d       	add	r30, r8
     fc2:	f1 1d       	adc	r31, r1
     fc4:	80 81       	ld	r24, Z
     fc6:	b6 01       	movw	r22, r12
     fc8:	90 e0       	ldi	r25, 0x00	; 0
     fca:	0e 94 13 08 	call	0x1026	; 0x1026 <fputc>
     fce:	81 10       	cpse	r8, r1
     fd0:	f5 cf       	rjmp	.-22     	; 0xfbc <vfprintf+0x384>
     fd2:	22 20       	and	r2, r2
     fd4:	09 f4       	brne	.+2      	; 0xfd8 <vfprintf+0x3a0>
     fd6:	42 ce       	rjmp	.-892    	; 0xc5c <vfprintf+0x24>
     fd8:	b6 01       	movw	r22, r12
     fda:	80 e2       	ldi	r24, 0x20	; 32
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	0e 94 13 08 	call	0x1026	; 0x1026 <fputc>
     fe2:	2a 94       	dec	r2
     fe4:	f6 cf       	rjmp	.-20     	; 0xfd2 <vfprintf+0x39a>
     fe6:	f6 01       	movw	r30, r12
     fe8:	86 81       	ldd	r24, Z+6	; 0x06
     fea:	97 81       	ldd	r25, Z+7	; 0x07
     fec:	02 c0       	rjmp	.+4      	; 0xff2 <vfprintf+0x3ba>
     fee:	8f ef       	ldi	r24, 0xFF	; 255
     ff0:	9f ef       	ldi	r25, 0xFF	; 255
     ff2:	2b 96       	adiw	r28, 0x0b	; 11
     ff4:	e2 e1       	ldi	r30, 0x12	; 18
     ff6:	0c 94 c9 08 	jmp	0x1192	; 0x1192 <__epilogue_restores__>

00000ffa <strnlen_P>:
     ffa:	fc 01       	movw	r30, r24
     ffc:	05 90       	lpm	r0, Z+
     ffe:	61 50       	subi	r22, 0x01	; 1
    1000:	70 40       	sbci	r23, 0x00	; 0
    1002:	01 10       	cpse	r0, r1
    1004:	d8 f7       	brcc	.-10     	; 0xffc <strnlen_P+0x2>
    1006:	80 95       	com	r24
    1008:	90 95       	com	r25
    100a:	8e 0f       	add	r24, r30
    100c:	9f 1f       	adc	r25, r31
    100e:	08 95       	ret

00001010 <strnlen>:
    1010:	fc 01       	movw	r30, r24
    1012:	61 50       	subi	r22, 0x01	; 1
    1014:	70 40       	sbci	r23, 0x00	; 0
    1016:	01 90       	ld	r0, Z+
    1018:	01 10       	cpse	r0, r1
    101a:	d8 f7       	brcc	.-10     	; 0x1012 <strnlen+0x2>
    101c:	80 95       	com	r24
    101e:	90 95       	com	r25
    1020:	8e 0f       	add	r24, r30
    1022:	9f 1f       	adc	r25, r31
    1024:	08 95       	ret

00001026 <fputc>:
    1026:	0f 93       	push	r16
    1028:	1f 93       	push	r17
    102a:	cf 93       	push	r28
    102c:	df 93       	push	r29
    102e:	fb 01       	movw	r30, r22
    1030:	23 81       	ldd	r18, Z+3	; 0x03
    1032:	21 fd       	sbrc	r18, 1
    1034:	03 c0       	rjmp	.+6      	; 0x103c <fputc+0x16>
    1036:	8f ef       	ldi	r24, 0xFF	; 255
    1038:	9f ef       	ldi	r25, 0xFF	; 255
    103a:	2c c0       	rjmp	.+88     	; 0x1094 <fputc+0x6e>
    103c:	22 ff       	sbrs	r18, 2
    103e:	16 c0       	rjmp	.+44     	; 0x106c <fputc+0x46>
    1040:	46 81       	ldd	r20, Z+6	; 0x06
    1042:	57 81       	ldd	r21, Z+7	; 0x07
    1044:	24 81       	ldd	r18, Z+4	; 0x04
    1046:	35 81       	ldd	r19, Z+5	; 0x05
    1048:	42 17       	cp	r20, r18
    104a:	53 07       	cpc	r21, r19
    104c:	44 f4       	brge	.+16     	; 0x105e <fputc+0x38>
    104e:	a0 81       	ld	r26, Z
    1050:	b1 81       	ldd	r27, Z+1	; 0x01
    1052:	9d 01       	movw	r18, r26
    1054:	2f 5f       	subi	r18, 0xFF	; 255
    1056:	3f 4f       	sbci	r19, 0xFF	; 255
    1058:	31 83       	std	Z+1, r19	; 0x01
    105a:	20 83       	st	Z, r18
    105c:	8c 93       	st	X, r24
    105e:	26 81       	ldd	r18, Z+6	; 0x06
    1060:	37 81       	ldd	r19, Z+7	; 0x07
    1062:	2f 5f       	subi	r18, 0xFF	; 255
    1064:	3f 4f       	sbci	r19, 0xFF	; 255
    1066:	37 83       	std	Z+7, r19	; 0x07
    1068:	26 83       	std	Z+6, r18	; 0x06
    106a:	14 c0       	rjmp	.+40     	; 0x1094 <fputc+0x6e>
    106c:	8b 01       	movw	r16, r22
    106e:	ec 01       	movw	r28, r24
    1070:	fb 01       	movw	r30, r22
    1072:	00 84       	ldd	r0, Z+8	; 0x08
    1074:	f1 85       	ldd	r31, Z+9	; 0x09
    1076:	e0 2d       	mov	r30, r0
    1078:	09 95       	icall
    107a:	89 2b       	or	r24, r25
    107c:	e1 f6       	brne	.-72     	; 0x1036 <fputc+0x10>
    107e:	d8 01       	movw	r26, r16
    1080:	16 96       	adiw	r26, 0x06	; 6
    1082:	8d 91       	ld	r24, X+
    1084:	9c 91       	ld	r25, X
    1086:	17 97       	sbiw	r26, 0x07	; 7
    1088:	01 96       	adiw	r24, 0x01	; 1
    108a:	17 96       	adiw	r26, 0x07	; 7
    108c:	9c 93       	st	X, r25
    108e:	8e 93       	st	-X, r24
    1090:	16 97       	sbiw	r26, 0x06	; 6
    1092:	ce 01       	movw	r24, r28
    1094:	df 91       	pop	r29
    1096:	cf 91       	pop	r28
    1098:	1f 91       	pop	r17
    109a:	0f 91       	pop	r16
    109c:	08 95       	ret

0000109e <__ultoa_invert>:
    109e:	fa 01       	movw	r30, r20
    10a0:	aa 27       	eor	r26, r26
    10a2:	28 30       	cpi	r18, 0x08	; 8
    10a4:	51 f1       	breq	.+84     	; 0x10fa <__ultoa_invert+0x5c>
    10a6:	20 31       	cpi	r18, 0x10	; 16
    10a8:	81 f1       	breq	.+96     	; 0x110a <__ultoa_invert+0x6c>
    10aa:	e8 94       	clt
    10ac:	6f 93       	push	r22
    10ae:	6e 7f       	andi	r22, 0xFE	; 254
    10b0:	6e 5f       	subi	r22, 0xFE	; 254
    10b2:	7f 4f       	sbci	r23, 0xFF	; 255
    10b4:	8f 4f       	sbci	r24, 0xFF	; 255
    10b6:	9f 4f       	sbci	r25, 0xFF	; 255
    10b8:	af 4f       	sbci	r26, 0xFF	; 255
    10ba:	b1 e0       	ldi	r27, 0x01	; 1
    10bc:	3e d0       	rcall	.+124    	; 0x113a <__ultoa_invert+0x9c>
    10be:	b4 e0       	ldi	r27, 0x04	; 4
    10c0:	3c d0       	rcall	.+120    	; 0x113a <__ultoa_invert+0x9c>
    10c2:	67 0f       	add	r22, r23
    10c4:	78 1f       	adc	r23, r24
    10c6:	89 1f       	adc	r24, r25
    10c8:	9a 1f       	adc	r25, r26
    10ca:	a1 1d       	adc	r26, r1
    10cc:	68 0f       	add	r22, r24
    10ce:	79 1f       	adc	r23, r25
    10d0:	8a 1f       	adc	r24, r26
    10d2:	91 1d       	adc	r25, r1
    10d4:	a1 1d       	adc	r26, r1
    10d6:	6a 0f       	add	r22, r26
    10d8:	71 1d       	adc	r23, r1
    10da:	81 1d       	adc	r24, r1
    10dc:	91 1d       	adc	r25, r1
    10de:	a1 1d       	adc	r26, r1
    10e0:	20 d0       	rcall	.+64     	; 0x1122 <__ultoa_invert+0x84>
    10e2:	09 f4       	brne	.+2      	; 0x10e6 <__ultoa_invert+0x48>
    10e4:	68 94       	set
    10e6:	3f 91       	pop	r19
    10e8:	2a e0       	ldi	r18, 0x0A	; 10
    10ea:	26 9f       	mul	r18, r22
    10ec:	11 24       	eor	r1, r1
    10ee:	30 19       	sub	r19, r0
    10f0:	30 5d       	subi	r19, 0xD0	; 208
    10f2:	31 93       	st	Z+, r19
    10f4:	de f6       	brtc	.-74     	; 0x10ac <__ultoa_invert+0xe>
    10f6:	cf 01       	movw	r24, r30
    10f8:	08 95       	ret
    10fa:	46 2f       	mov	r20, r22
    10fc:	47 70       	andi	r20, 0x07	; 7
    10fe:	40 5d       	subi	r20, 0xD0	; 208
    1100:	41 93       	st	Z+, r20
    1102:	b3 e0       	ldi	r27, 0x03	; 3
    1104:	0f d0       	rcall	.+30     	; 0x1124 <__ultoa_invert+0x86>
    1106:	c9 f7       	brne	.-14     	; 0x10fa <__ultoa_invert+0x5c>
    1108:	f6 cf       	rjmp	.-20     	; 0x10f6 <__ultoa_invert+0x58>
    110a:	46 2f       	mov	r20, r22
    110c:	4f 70       	andi	r20, 0x0F	; 15
    110e:	40 5d       	subi	r20, 0xD0	; 208
    1110:	4a 33       	cpi	r20, 0x3A	; 58
    1112:	18 f0       	brcs	.+6      	; 0x111a <__ultoa_invert+0x7c>
    1114:	49 5d       	subi	r20, 0xD9	; 217
    1116:	31 fd       	sbrc	r19, 1
    1118:	40 52       	subi	r20, 0x20	; 32
    111a:	41 93       	st	Z+, r20
    111c:	02 d0       	rcall	.+4      	; 0x1122 <__ultoa_invert+0x84>
    111e:	a9 f7       	brne	.-22     	; 0x110a <__ultoa_invert+0x6c>
    1120:	ea cf       	rjmp	.-44     	; 0x10f6 <__ultoa_invert+0x58>
    1122:	b4 e0       	ldi	r27, 0x04	; 4
    1124:	a6 95       	lsr	r26
    1126:	97 95       	ror	r25
    1128:	87 95       	ror	r24
    112a:	77 95       	ror	r23
    112c:	67 95       	ror	r22
    112e:	ba 95       	dec	r27
    1130:	c9 f7       	brne	.-14     	; 0x1124 <__ultoa_invert+0x86>
    1132:	00 97       	sbiw	r24, 0x00	; 0
    1134:	61 05       	cpc	r22, r1
    1136:	71 05       	cpc	r23, r1
    1138:	08 95       	ret
    113a:	9b 01       	movw	r18, r22
    113c:	ac 01       	movw	r20, r24
    113e:	0a 2e       	mov	r0, r26
    1140:	06 94       	lsr	r0
    1142:	57 95       	ror	r21
    1144:	47 95       	ror	r20
    1146:	37 95       	ror	r19
    1148:	27 95       	ror	r18
    114a:	ba 95       	dec	r27
    114c:	c9 f7       	brne	.-14     	; 0x1140 <__ultoa_invert+0xa2>
    114e:	62 0f       	add	r22, r18
    1150:	73 1f       	adc	r23, r19
    1152:	84 1f       	adc	r24, r20
    1154:	95 1f       	adc	r25, r21
    1156:	a0 1d       	adc	r26, r0
    1158:	08 95       	ret

0000115a <__prologue_saves__>:
    115a:	2f 92       	push	r2
    115c:	3f 92       	push	r3
    115e:	4f 92       	push	r4
    1160:	5f 92       	push	r5
    1162:	6f 92       	push	r6
    1164:	7f 92       	push	r7
    1166:	8f 92       	push	r8
    1168:	9f 92       	push	r9
    116a:	af 92       	push	r10
    116c:	bf 92       	push	r11
    116e:	cf 92       	push	r12
    1170:	df 92       	push	r13
    1172:	ef 92       	push	r14
    1174:	ff 92       	push	r15
    1176:	0f 93       	push	r16
    1178:	1f 93       	push	r17
    117a:	cf 93       	push	r28
    117c:	df 93       	push	r29
    117e:	cd b7       	in	r28, 0x3d	; 61
    1180:	de b7       	in	r29, 0x3e	; 62
    1182:	ca 1b       	sub	r28, r26
    1184:	db 0b       	sbc	r29, r27
    1186:	0f b6       	in	r0, 0x3f	; 63
    1188:	f8 94       	cli
    118a:	de bf       	out	0x3e, r29	; 62
    118c:	0f be       	out	0x3f, r0	; 63
    118e:	cd bf       	out	0x3d, r28	; 61
    1190:	09 94       	ijmp

00001192 <__epilogue_restores__>:
    1192:	2a 88       	ldd	r2, Y+18	; 0x12
    1194:	39 88       	ldd	r3, Y+17	; 0x11
    1196:	48 88       	ldd	r4, Y+16	; 0x10
    1198:	5f 84       	ldd	r5, Y+15	; 0x0f
    119a:	6e 84       	ldd	r6, Y+14	; 0x0e
    119c:	7d 84       	ldd	r7, Y+13	; 0x0d
    119e:	8c 84       	ldd	r8, Y+12	; 0x0c
    11a0:	9b 84       	ldd	r9, Y+11	; 0x0b
    11a2:	aa 84       	ldd	r10, Y+10	; 0x0a
    11a4:	b9 84       	ldd	r11, Y+9	; 0x09
    11a6:	c8 84       	ldd	r12, Y+8	; 0x08
    11a8:	df 80       	ldd	r13, Y+7	; 0x07
    11aa:	ee 80       	ldd	r14, Y+6	; 0x06
    11ac:	fd 80       	ldd	r15, Y+5	; 0x05
    11ae:	0c 81       	ldd	r16, Y+4	; 0x04
    11b0:	1b 81       	ldd	r17, Y+3	; 0x03
    11b2:	aa 81       	ldd	r26, Y+2	; 0x02
    11b4:	b9 81       	ldd	r27, Y+1	; 0x01
    11b6:	ce 0f       	add	r28, r30
    11b8:	d1 1d       	adc	r29, r1
    11ba:	0f b6       	in	r0, 0x3f	; 63
    11bc:	f8 94       	cli
    11be:	de bf       	out	0x3e, r29	; 62
    11c0:	0f be       	out	0x3f, r0	; 63
    11c2:	cd bf       	out	0x3d, r28	; 61
    11c4:	ed 01       	movw	r28, r26
    11c6:	08 95       	ret

000011c8 <_exit>:
    11c8:	f8 94       	cli

000011ca <__stop_program>:
    11ca:	ff cf       	rjmp	.-2      	; 0x11ca <__stop_program>
