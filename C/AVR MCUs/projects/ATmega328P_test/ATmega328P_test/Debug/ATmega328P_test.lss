
ATmega328P_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000004f8  0000058c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004f8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800110  00800110  0000059c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000059c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005cc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  0000060c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a65  00000000  00000000  0000064c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000705  00000000  00000000  000010b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004a8  00000000  00000000  000017b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  00001c60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003fa  00000000  00000000  00001cf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003ed  00000000  00000000  000020ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  000024db  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
   c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  34:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__vector_15>
  40:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  50:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  54:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
  68:	ee 00       	.word	0x00ee	; ????
  6a:	01 01       	movw	r0, r2
  6c:	1c 01       	movw	r2, r24
  6e:	3c 01       	movw	r6, r24
  70:	5f 01       	movw	r10, r30
  72:	81 01       	movw	r16, r2
  74:	a6 01       	movw	r20, r12
  76:	cb 01       	movw	r24, r22
  78:	ef 01       	movw	r28, r30
  7a:	13 02       	muls	r17, r19

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e8 ef       	ldi	r30, 0xF8	; 248
  90:	f4 e0       	ldi	r31, 0x04	; 4
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a0 31       	cpi	r26, 0x10	; 16
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	a0 e1       	ldi	r26, 0x10	; 16
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a8 31       	cpi	r26, 0x18	; 24
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	0e 94 55 02 	call	0x4aa	; 0x4aa <main>
  b2:	0c 94 7a 02 	jmp	0x4f4	; 0x4f4 <_exit>

000000b6 <__bad_interrupt>:
  b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <__vector_15>:
unsigned int s_var = 0;
unsigned int m_var = 0;
unsigned int counter = 0;
	
ISR(TIMER0_COMPB_vect)
{
  ba:	1f 92       	push	r1
  bc:	0f 92       	push	r0
  be:	0f b6       	in	r0, 0x3f	; 63
  c0:	0f 92       	push	r0
  c2:	11 24       	eor	r1, r1
  c4:	2f 93       	push	r18
  c6:	3f 93       	push	r19
  c8:	4f 93       	push	r20
  ca:	8f 93       	push	r24
  cc:	9f 93       	push	r25
	ms_var += 16;
  ce:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <ms_var>
  d2:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <ms_var+0x1>
  d6:	40 96       	adiw	r24, 0x10	; 16
  d8:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <ms_var+0x1>
  dc:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <ms_var>
	if (ms_var >= 1000)
  e0:	88 3e       	cpi	r24, 0xE8	; 232
  e2:	93 40       	sbci	r25, 0x03	; 3
  e4:	10 f1       	brcs	.+68     	; 0x12a <__vector_15+0x70>
	{
		ms_var = 0;
  e6:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <ms_var+0x1>
  ea:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <ms_var>
		s_var++;
  ee:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <s_var>
  f2:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <s_var+0x1>
  f6:	01 96       	adiw	r24, 0x01	; 1
  f8:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <s_var+0x1>
  fc:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <s_var>
		if (s_var == 60)
 100:	cc 97       	sbiw	r24, 0x3c	; 60
 102:	99 f4       	brne	.+38     	; 0x12a <__vector_15+0x70>
		{
			s_var = 0;
 104:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <s_var+0x1>
 108:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <s_var>
			m_var++;
 10c:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <m_var>
 110:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <m_var+0x1>
 114:	01 96       	adiw	r24, 0x01	; 1
 116:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <m_var+0x1>
 11a:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <m_var>
			if (m_var == 60)
 11e:	cc 97       	sbiw	r24, 0x3c	; 60
 120:	21 f4       	brne	.+8      	; 0x12a <__vector_15+0x70>
			{
				m_var = 0;
 122:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <m_var+0x1>
 126:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <m_var>
			}
		}
	}
	
	counter = m_var * 100 + s_var;
 12a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <m_var>
 12e:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <m_var+0x1>
 132:	44 e6       	ldi	r20, 0x64	; 100
 134:	48 9f       	mul	r20, r24
 136:	90 01       	movw	r18, r0
 138:	49 9f       	mul	r20, r25
 13a:	30 0d       	add	r19, r0
 13c:	11 24       	eor	r1, r1
 13e:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <s_var>
 142:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <s_var+0x1>
 146:	82 0f       	add	r24, r18
 148:	93 1f       	adc	r25, r19
 14a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x1>
 14e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
	TCNT0 = 0;
 152:	16 bc       	out	0x26, r1	; 38
}
 154:	9f 91       	pop	r25
 156:	8f 91       	pop	r24
 158:	4f 91       	pop	r20
 15a:	3f 91       	pop	r19
 15c:	2f 91       	pop	r18
 15e:	0f 90       	pop	r0
 160:	0f be       	out	0x3f, r0	; 63
 162:	0f 90       	pop	r0
 164:	1f 90       	pop	r1
 166:	18 95       	reti

00000168 <Timer_init>:

void Timer_init()
{
	TIMSK0 = (1<<OCIE0B);
 168:	84 e0       	ldi	r24, 0x04	; 4
 16a:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	OCR1B = 250;
 16e:	8a ef       	ldi	r24, 0xFA	; 250
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
 176:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
	TCCR0B = (1<<CS12) | (1<<CS10) | (1<<WGM02);
 17a:	8d e0       	ldi	r24, 0x0D	; 13
 17c:	85 bd       	out	0x25, r24	; 37
	TCCR0B &= ~(1<<CS11);
 17e:	85 b5       	in	r24, 0x25	; 37
 180:	8d 7f       	andi	r24, 0xFD	; 253
 182:	85 bd       	out	0x25, r24	; 37
	TCNT0 = 0;
 184:	16 bc       	out	0x26, r1	; 38
	sei();
 186:	78 94       	sei
 188:	08 95       	ret

0000018a <Port_init>:
}

void Port_init()
{
	DDRD = (D2) | (D3) | (D4) | (D5) | (D6) | (D7);
 18a:	8c ef       	ldi	r24, 0xFC	; 252
 18c:	8a b9       	out	0x0a, r24	; 10
	DDRB = (D8) | (D9) | (D10) | (D11) | (D12) | (D13);
 18e:	8f e3       	ldi	r24, 0x3F	; 63
 190:	84 b9       	out	0x04, r24	; 4
	
	PORTB = (D10) | (D11) | (D12) | (D13);
 192:	8c e3       	ldi	r24, 0x3C	; 60
 194:	85 b9       	out	0x05, r24	; 5
	PORTD = 0x00;
 196:	1b b8       	out	0x0b, r1	; 11
 198:	08 95       	ret

0000019a <Show_num>:
}

void Show_num(unsigned int num)
{
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	ec 01       	movw	r28, r24
	for (unsigned int i = 0; i < 4; i++)
 1a0:	20 e0       	ldi	r18, 0x00	; 0
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	7b c1       	rjmp	.+758    	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
	{
		PORTB = (D10) | (D11) | (D12) | (D13);
 1a6:	8c e3       	ldi	r24, 0x3C	; 60
 1a8:	85 b9       	out	0x05, r24	; 5
		if (i == 1)
 1aa:	21 30       	cpi	r18, 0x01	; 1
 1ac:	31 05       	cpc	r19, r1
 1ae:	19 f4       	brne	.+6      	; 0x1b6 <Show_num+0x1c>
		{
			PORTB |= (D9);
 1b0:	85 b1       	in	r24, 0x05	; 5
 1b2:	82 60       	ori	r24, 0x02	; 2
 1b4:	85 b9       	out	0x05, r24	; 5
		}
		
		switch (num / scale[i])
 1b6:	f9 01       	movw	r30, r18
 1b8:	ee 0f       	add	r30, r30
 1ba:	ff 1f       	adc	r31, r31
 1bc:	e0 50       	subi	r30, 0x00	; 0
 1be:	ff 4f       	sbci	r31, 0xFF	; 255
 1c0:	60 81       	ld	r22, Z
 1c2:	71 81       	ldd	r23, Z+1	; 0x01
 1c4:	ce 01       	movw	r24, r28
 1c6:	0e 94 60 02 	call	0x4c0	; 0x4c0 <__udivmodhi4>
 1ca:	6a 30       	cpi	r22, 0x0A	; 10
 1cc:	71 05       	cpc	r23, r1
 1ce:	08 f0       	brcs	.+2      	; 0x1d2 <Show_num+0x38>
 1d0:	51 c1       	rjmp	.+674    	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 1d2:	fb 01       	movw	r30, r22
 1d4:	ec 5c       	subi	r30, 0xCC	; 204
 1d6:	ff 4f       	sbci	r31, 0xFF	; 255
 1d8:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__tablejump2__>
		{
			case 0:
			PORTD = (D2) | (D3) | (D4) | (D5) | (D6) | (D7);
 1dc:	8c ef       	ldi	r24, 0xFC	; 252
 1de:	8b b9       	out	0x0b, r24	; 11
			
			PORTB &= ~(ports[i]);
 1e0:	95 b1       	in	r25, 0x05	; 5
 1e2:	f9 01       	movw	r30, r18
 1e4:	ee 0f       	add	r30, r30
 1e6:	ff 1f       	adc	r31, r31
 1e8:	e8 5f       	subi	r30, 0xF8	; 248
 1ea:	fe 4f       	sbci	r31, 0xFE	; 254
 1ec:	80 81       	ld	r24, Z
 1ee:	80 95       	com	r24
 1f0:	89 23       	and	r24, r25
 1f2:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1f4:	8f e9       	ldi	r24, 0x9F	; 159
 1f6:	9f e0       	ldi	r25, 0x0F	; 15
 1f8:	01 97       	sbiw	r24, 0x01	; 1
 1fa:	f1 f7       	brne	.-4      	; 0x1f8 <Show_num+0x5e>
 1fc:	00 c0       	rjmp	.+0      	; 0x1fe <Show_num+0x64>
 1fe:	00 00       	nop
 200:	4b c1       	rjmp	.+662    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
			num -= 0 * scale[i];
			_delay_ms(1);
			break;
			
			case 1:
			PORTD = (D3) | (D4);
 202:	88 e1       	ldi	r24, 0x18	; 24
 204:	8b b9       	out	0x0b, r24	; 11
			
			PORTB &= ~(ports[i]);
 206:	55 b1       	in	r21, 0x05	; 5
 208:	c9 01       	movw	r24, r18
 20a:	88 0f       	add	r24, r24
 20c:	99 1f       	adc	r25, r25
 20e:	fc 01       	movw	r30, r24
 210:	e8 5f       	subi	r30, 0xF8	; 248
 212:	fe 4f       	sbci	r31, 0xFE	; 254
 214:	40 81       	ld	r20, Z
 216:	40 95       	com	r20
 218:	45 23       	and	r20, r21
 21a:	45 b9       	out	0x05, r20	; 5
			num -= 1 * scale[i];
 21c:	fc 01       	movw	r30, r24
 21e:	e0 50       	subi	r30, 0x00	; 0
 220:	ff 4f       	sbci	r31, 0xFF	; 255
 222:	80 81       	ld	r24, Z
 224:	91 81       	ldd	r25, Z+1	; 0x01
 226:	c8 1b       	sub	r28, r24
 228:	d9 0b       	sbc	r29, r25
 22a:	8f e9       	ldi	r24, 0x9F	; 159
 22c:	9f e0       	ldi	r25, 0x0F	; 15
 22e:	01 97       	sbiw	r24, 0x01	; 1
 230:	f1 f7       	brne	.-4      	; 0x22e <Show_num+0x94>
 232:	00 c0       	rjmp	.+0      	; 0x234 <Show_num+0x9a>
 234:	00 00       	nop
 236:	30 c1       	rjmp	.+608    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
			_delay_ms(1);
			break;
			
			case 2:
			PORTD = (D2) | (D3) | (D5) | (D6);
 238:	8c e6       	ldi	r24, 0x6C	; 108
 23a:	8b b9       	out	0x0b, r24	; 11
			PORTB |= (D8);
 23c:	85 b1       	in	r24, 0x05	; 5
 23e:	81 60       	ori	r24, 0x01	; 1
 240:	85 b9       	out	0x05, r24	; 5
			
			PORTB &= ~(ports[i]);
 242:	55 b1       	in	r21, 0x05	; 5
 244:	c9 01       	movw	r24, r18
 246:	88 0f       	add	r24, r24
 248:	99 1f       	adc	r25, r25
 24a:	fc 01       	movw	r30, r24
 24c:	e8 5f       	subi	r30, 0xF8	; 248
 24e:	fe 4f       	sbci	r31, 0xFE	; 254
 250:	40 81       	ld	r20, Z
 252:	40 95       	com	r20
 254:	45 23       	and	r20, r21
 256:	45 b9       	out	0x05, r20	; 5
			num -= 2 * scale[i];
 258:	fc 01       	movw	r30, r24
 25a:	e0 50       	subi	r30, 0x00	; 0
 25c:	ff 4f       	sbci	r31, 0xFF	; 255
 25e:	80 81       	ld	r24, Z
 260:	91 81       	ldd	r25, Z+1	; 0x01
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	c8 1b       	sub	r28, r24
 268:	d9 0b       	sbc	r29, r25
 26a:	8f e9       	ldi	r24, 0x9F	; 159
 26c:	9f e0       	ldi	r25, 0x0F	; 15
 26e:	01 97       	sbiw	r24, 0x01	; 1
 270:	f1 f7       	brne	.-4      	; 0x26e <Show_num+0xd4>
 272:	00 c0       	rjmp	.+0      	; 0x274 <Show_num+0xda>
 274:	00 00       	nop
 276:	10 c1       	rjmp	.+544    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
			_delay_ms(1);
			break;
			
			case 3:
			PORTD = (D2) | (D3) | (D4) | (D5);
 278:	8c e3       	ldi	r24, 0x3C	; 60
 27a:	8b b9       	out	0x0b, r24	; 11
			PORTB |= (D8);
 27c:	85 b1       	in	r24, 0x05	; 5
 27e:	81 60       	ori	r24, 0x01	; 1
 280:	85 b9       	out	0x05, r24	; 5
			
			PORTB &= ~(ports[i]);
 282:	55 b1       	in	r21, 0x05	; 5
 284:	c9 01       	movw	r24, r18
 286:	88 0f       	add	r24, r24
 288:	99 1f       	adc	r25, r25
 28a:	fc 01       	movw	r30, r24
 28c:	e8 5f       	subi	r30, 0xF8	; 248
 28e:	fe 4f       	sbci	r31, 0xFE	; 254
 290:	40 81       	ld	r20, Z
 292:	40 95       	com	r20
 294:	45 23       	and	r20, r21
 296:	45 b9       	out	0x05, r20	; 5
			num -= 3 * scale[i];
 298:	fc 01       	movw	r30, r24
 29a:	e0 50       	subi	r30, 0x00	; 0
 29c:	ff 4f       	sbci	r31, 0xFF	; 255
 29e:	80 81       	ld	r24, Z
 2a0:	91 81       	ldd	r25, Z+1	; 0x01
 2a2:	ac 01       	movw	r20, r24
 2a4:	44 0f       	add	r20, r20
 2a6:	55 1f       	adc	r21, r21
 2a8:	84 0f       	add	r24, r20
 2aa:	95 1f       	adc	r25, r21
 2ac:	c8 1b       	sub	r28, r24
 2ae:	d9 0b       	sbc	r29, r25
 2b0:	8f e9       	ldi	r24, 0x9F	; 159
 2b2:	9f e0       	ldi	r25, 0x0F	; 15
 2b4:	01 97       	sbiw	r24, 0x01	; 1
 2b6:	f1 f7       	brne	.-4      	; 0x2b4 <Show_num+0x11a>
 2b8:	00 c0       	rjmp	.+0      	; 0x2ba <Show_num+0x120>
 2ba:	00 00       	nop
 2bc:	ed c0       	rjmp	.+474    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
			_delay_ms(1);
			break;
			
			case 4:
			PORTD = (D3) | (D4) | (D7);
 2be:	88 e9       	ldi	r24, 0x98	; 152
 2c0:	8b b9       	out	0x0b, r24	; 11
			PORTB |= (D8);
 2c2:	85 b1       	in	r24, 0x05	; 5
 2c4:	81 60       	ori	r24, 0x01	; 1
 2c6:	85 b9       	out	0x05, r24	; 5
			
			PORTB &= ~(ports[i]);
 2c8:	55 b1       	in	r21, 0x05	; 5
 2ca:	c9 01       	movw	r24, r18
 2cc:	88 0f       	add	r24, r24
 2ce:	99 1f       	adc	r25, r25
 2d0:	fc 01       	movw	r30, r24
 2d2:	e8 5f       	subi	r30, 0xF8	; 248
 2d4:	fe 4f       	sbci	r31, 0xFE	; 254
 2d6:	40 81       	ld	r20, Z
 2d8:	40 95       	com	r20
 2da:	45 23       	and	r20, r21
 2dc:	45 b9       	out	0x05, r20	; 5
			num -= 4 * scale[i];
 2de:	fc 01       	movw	r30, r24
 2e0:	e0 50       	subi	r30, 0x00	; 0
 2e2:	ff 4f       	sbci	r31, 0xFF	; 255
 2e4:	80 81       	ld	r24, Z
 2e6:	91 81       	ldd	r25, Z+1	; 0x01
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	88 0f       	add	r24, r24
 2ee:	99 1f       	adc	r25, r25
 2f0:	c8 1b       	sub	r28, r24
 2f2:	d9 0b       	sbc	r29, r25
 2f4:	8f e9       	ldi	r24, 0x9F	; 159
 2f6:	9f e0       	ldi	r25, 0x0F	; 15
 2f8:	01 97       	sbiw	r24, 0x01	; 1
 2fa:	f1 f7       	brne	.-4      	; 0x2f8 <Show_num+0x15e>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <Show_num+0x164>
 2fe:	00 00       	nop
 300:	cb c0       	rjmp	.+406    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
			_delay_ms(1);
			break;
			
			case 5:
			PORTD = (D2) | (D4) | (D5) | (D7);
 302:	84 eb       	ldi	r24, 0xB4	; 180
 304:	8b b9       	out	0x0b, r24	; 11
			PORTB |= (D8);
 306:	85 b1       	in	r24, 0x05	; 5
 308:	81 60       	ori	r24, 0x01	; 1
 30a:	85 b9       	out	0x05, r24	; 5
			
			PORTB &= ~(ports[i]);
 30c:	55 b1       	in	r21, 0x05	; 5
 30e:	c9 01       	movw	r24, r18
 310:	88 0f       	add	r24, r24
 312:	99 1f       	adc	r25, r25
 314:	fc 01       	movw	r30, r24
 316:	e8 5f       	subi	r30, 0xF8	; 248
 318:	fe 4f       	sbci	r31, 0xFE	; 254
 31a:	40 81       	ld	r20, Z
 31c:	40 95       	com	r20
 31e:	45 23       	and	r20, r21
 320:	45 b9       	out	0x05, r20	; 5
			num -= 5 * scale[i];
 322:	fc 01       	movw	r30, r24
 324:	e0 50       	subi	r30, 0x00	; 0
 326:	ff 4f       	sbci	r31, 0xFF	; 255
 328:	80 81       	ld	r24, Z
 32a:	91 81       	ldd	r25, Z+1	; 0x01
 32c:	ac 01       	movw	r20, r24
 32e:	44 0f       	add	r20, r20
 330:	55 1f       	adc	r21, r21
 332:	44 0f       	add	r20, r20
 334:	55 1f       	adc	r21, r21
 336:	84 0f       	add	r24, r20
 338:	95 1f       	adc	r25, r21
 33a:	c8 1b       	sub	r28, r24
 33c:	d9 0b       	sbc	r29, r25
 33e:	8f e9       	ldi	r24, 0x9F	; 159
 340:	9f e0       	ldi	r25, 0x0F	; 15
 342:	01 97       	sbiw	r24, 0x01	; 1
 344:	f1 f7       	brne	.-4      	; 0x342 <Show_num+0x1a8>
 346:	00 c0       	rjmp	.+0      	; 0x348 <Show_num+0x1ae>
 348:	00 00       	nop
 34a:	a6 c0       	rjmp	.+332    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
			_delay_ms(1);
			break;
			
			case 6:
			PORTD = (D2) | (D4) | (D5) | (D6) | (D7);
 34c:	84 ef       	ldi	r24, 0xF4	; 244
 34e:	8b b9       	out	0x0b, r24	; 11
			PORTB |= (D8);
 350:	85 b1       	in	r24, 0x05	; 5
 352:	81 60       	ori	r24, 0x01	; 1
 354:	85 b9       	out	0x05, r24	; 5
			
			PORTB &= ~(ports[i]);
 356:	55 b1       	in	r21, 0x05	; 5
 358:	c9 01       	movw	r24, r18
 35a:	88 0f       	add	r24, r24
 35c:	99 1f       	adc	r25, r25
 35e:	fc 01       	movw	r30, r24
 360:	e8 5f       	subi	r30, 0xF8	; 248
 362:	fe 4f       	sbci	r31, 0xFE	; 254
 364:	40 81       	ld	r20, Z
 366:	40 95       	com	r20
 368:	45 23       	and	r20, r21
 36a:	45 b9       	out	0x05, r20	; 5
			num -= 6 * scale[i];
 36c:	fc 01       	movw	r30, r24
 36e:	e0 50       	subi	r30, 0x00	; 0
 370:	ff 4f       	sbci	r31, 0xFF	; 255
 372:	80 81       	ld	r24, Z
 374:	91 81       	ldd	r25, Z+1	; 0x01
 376:	ac 01       	movw	r20, r24
 378:	44 0f       	add	r20, r20
 37a:	55 1f       	adc	r21, r21
 37c:	84 0f       	add	r24, r20
 37e:	95 1f       	adc	r25, r21
 380:	88 0f       	add	r24, r24
 382:	99 1f       	adc	r25, r25
 384:	c8 1b       	sub	r28, r24
 386:	d9 0b       	sbc	r29, r25
 388:	8f e9       	ldi	r24, 0x9F	; 159
 38a:	9f e0       	ldi	r25, 0x0F	; 15
 38c:	01 97       	sbiw	r24, 0x01	; 1
 38e:	f1 f7       	brne	.-4      	; 0x38c <Show_num+0x1f2>
 390:	00 c0       	rjmp	.+0      	; 0x392 <Show_num+0x1f8>
 392:	00 00       	nop
 394:	81 c0       	rjmp	.+258    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
			_delay_ms(1);
			break;
			
			case 7:
			PORTD = (D2) | (D3) | (D4);
 396:	8c e1       	ldi	r24, 0x1C	; 28
 398:	8b b9       	out	0x0b, r24	; 11
			
			PORTB &= ~(ports[i]);
 39a:	55 b1       	in	r21, 0x05	; 5
 39c:	c9 01       	movw	r24, r18
 39e:	88 0f       	add	r24, r24
 3a0:	99 1f       	adc	r25, r25
 3a2:	fc 01       	movw	r30, r24
 3a4:	e8 5f       	subi	r30, 0xF8	; 248
 3a6:	fe 4f       	sbci	r31, 0xFE	; 254
 3a8:	40 81       	ld	r20, Z
 3aa:	40 95       	com	r20
 3ac:	45 23       	and	r20, r21
 3ae:	45 b9       	out	0x05, r20	; 5
			num -= 7 * scale[i];
 3b0:	fc 01       	movw	r30, r24
 3b2:	e0 50       	subi	r30, 0x00	; 0
 3b4:	ff 4f       	sbci	r31, 0xFF	; 255
 3b6:	40 81       	ld	r20, Z
 3b8:	51 81       	ldd	r21, Z+1	; 0x01
 3ba:	ca 01       	movw	r24, r20
 3bc:	88 0f       	add	r24, r24
 3be:	99 1f       	adc	r25, r25
 3c0:	88 0f       	add	r24, r24
 3c2:	99 1f       	adc	r25, r25
 3c4:	88 0f       	add	r24, r24
 3c6:	99 1f       	adc	r25, r25
 3c8:	84 1b       	sub	r24, r20
 3ca:	95 0b       	sbc	r25, r21
 3cc:	c8 1b       	sub	r28, r24
 3ce:	d9 0b       	sbc	r29, r25
 3d0:	8f e9       	ldi	r24, 0x9F	; 159
 3d2:	9f e0       	ldi	r25, 0x0F	; 15
 3d4:	01 97       	sbiw	r24, 0x01	; 1
 3d6:	f1 f7       	brne	.-4      	; 0x3d4 <Show_num+0x23a>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <Show_num+0x240>
 3da:	00 00       	nop
 3dc:	5d c0       	rjmp	.+186    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
			_delay_ms(1);
			break;
			
			case 8:
			PORTD = (D2) | (D3) | (D4) | (D5) | (D6) | (D7);
 3de:	8c ef       	ldi	r24, 0xFC	; 252
 3e0:	8b b9       	out	0x0b, r24	; 11
			PORTB |= (D8);
 3e2:	85 b1       	in	r24, 0x05	; 5
 3e4:	81 60       	ori	r24, 0x01	; 1
 3e6:	85 b9       	out	0x05, r24	; 5
			
			PORTB &= ~(ports[i]);
 3e8:	55 b1       	in	r21, 0x05	; 5
 3ea:	c9 01       	movw	r24, r18
 3ec:	88 0f       	add	r24, r24
 3ee:	99 1f       	adc	r25, r25
 3f0:	fc 01       	movw	r30, r24
 3f2:	e8 5f       	subi	r30, 0xF8	; 248
 3f4:	fe 4f       	sbci	r31, 0xFE	; 254
 3f6:	40 81       	ld	r20, Z
 3f8:	40 95       	com	r20
 3fa:	45 23       	and	r20, r21
 3fc:	45 b9       	out	0x05, r20	; 5
			num -= 8 * scale[i];
 3fe:	fc 01       	movw	r30, r24
 400:	e0 50       	subi	r30, 0x00	; 0
 402:	ff 4f       	sbci	r31, 0xFF	; 255
 404:	80 81       	ld	r24, Z
 406:	91 81       	ldd	r25, Z+1	; 0x01
 408:	88 0f       	add	r24, r24
 40a:	99 1f       	adc	r25, r25
 40c:	88 0f       	add	r24, r24
 40e:	99 1f       	adc	r25, r25
 410:	88 0f       	add	r24, r24
 412:	99 1f       	adc	r25, r25
 414:	c8 1b       	sub	r28, r24
 416:	d9 0b       	sbc	r29, r25
 418:	8f e9       	ldi	r24, 0x9F	; 159
 41a:	9f e0       	ldi	r25, 0x0F	; 15
 41c:	01 97       	sbiw	r24, 0x01	; 1
 41e:	f1 f7       	brne	.-4      	; 0x41c <__EEPROM_REGION_LENGTH__+0x1c>
 420:	00 c0       	rjmp	.+0      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 422:	00 00       	nop
 424:	39 c0       	rjmp	.+114    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
			_delay_ms(1);
			break;
			
			case 9:
			PORTD = (D2) | (D3) | (D4) | (D5) | (D7);
 426:	8c eb       	ldi	r24, 0xBC	; 188
 428:	8b b9       	out	0x0b, r24	; 11
			PORTB |= (D8);
 42a:	85 b1       	in	r24, 0x05	; 5
 42c:	81 60       	ori	r24, 0x01	; 1
 42e:	85 b9       	out	0x05, r24	; 5
			
			PORTB &= ~(ports[i]);
 430:	55 b1       	in	r21, 0x05	; 5
 432:	c9 01       	movw	r24, r18
 434:	88 0f       	add	r24, r24
 436:	99 1f       	adc	r25, r25
 438:	fc 01       	movw	r30, r24
 43a:	e8 5f       	subi	r30, 0xF8	; 248
 43c:	fe 4f       	sbci	r31, 0xFE	; 254
 43e:	40 81       	ld	r20, Z
 440:	40 95       	com	r20
 442:	45 23       	and	r20, r21
 444:	45 b9       	out	0x05, r20	; 5
			num -= 9 * scale[i];
 446:	fc 01       	movw	r30, r24
 448:	e0 50       	subi	r30, 0x00	; 0
 44a:	ff 4f       	sbci	r31, 0xFF	; 255
 44c:	80 81       	ld	r24, Z
 44e:	91 81       	ldd	r25, Z+1	; 0x01
 450:	ac 01       	movw	r20, r24
 452:	44 0f       	add	r20, r20
 454:	55 1f       	adc	r21, r21
 456:	44 0f       	add	r20, r20
 458:	55 1f       	adc	r21, r21
 45a:	44 0f       	add	r20, r20
 45c:	55 1f       	adc	r21, r21
 45e:	84 0f       	add	r24, r20
 460:	95 1f       	adc	r25, r21
 462:	c8 1b       	sub	r28, r24
 464:	d9 0b       	sbc	r29, r25
 466:	8f e9       	ldi	r24, 0x9F	; 159
 468:	9f e0       	ldi	r25, 0x0F	; 15
 46a:	01 97       	sbiw	r24, 0x01	; 1
 46c:	f1 f7       	brne	.-4      	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 46e:	00 c0       	rjmp	.+0      	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 470:	00 00       	nop
 472:	12 c0       	rjmp	.+36     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
			_delay_ms(1);
			break;
			
			default:
			PORTD = (D2) | (D3) | (D4) | (D5) | (D6) | (D7);
 474:	8c ef       	ldi	r24, 0xFC	; 252
 476:	8b b9       	out	0x0b, r24	; 11
			
			PORTB &= ~(ports[i]);
 478:	95 b1       	in	r25, 0x05	; 5
 47a:	f9 01       	movw	r30, r18
 47c:	ee 0f       	add	r30, r30
 47e:	ff 1f       	adc	r31, r31
 480:	e8 5f       	subi	r30, 0xF8	; 248
 482:	fe 4f       	sbci	r31, 0xFE	; 254
 484:	80 81       	ld	r24, Z
 486:	80 95       	com	r24
 488:	89 23       	and	r24, r25
 48a:	85 b9       	out	0x05, r24	; 5
 48c:	8f e9       	ldi	r24, 0x9F	; 159
 48e:	9f e0       	ldi	r25, 0x0F	; 15
 490:	01 97       	sbiw	r24, 0x01	; 1
 492:	f1 f7       	brne	.-4      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
 494:	00 c0       	rjmp	.+0      	; 0x496 <__EEPROM_REGION_LENGTH__+0x96>
 496:	00 00       	nop
	PORTD = 0x00;
}

void Show_num(unsigned int num)
{
	for (unsigned int i = 0; i < 4; i++)
 498:	2f 5f       	subi	r18, 0xFF	; 255
 49a:	3f 4f       	sbci	r19, 0xFF	; 255
 49c:	24 30       	cpi	r18, 0x04	; 4
 49e:	31 05       	cpc	r19, r1
 4a0:	08 f4       	brcc	.+2      	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
 4a2:	81 ce       	rjmp	.-766    	; 0x1a6 <Show_num+0xc>
			num -= 0 * scale[i];
			_delay_ms(1);
			break;
		}
	}
}
 4a4:	df 91       	pop	r29
 4a6:	cf 91       	pop	r28
 4a8:	08 95       	ret

000004aa <main>:

int main(void)
{
	Timer_init();
 4aa:	0e 94 b4 00 	call	0x168	; 0x168 <Timer_init>
	Port_init();
 4ae:	0e 94 c5 00 	call	0x18a	; 0x18a <Port_init>
	
    while (1) 
    {	
		Show_num(counter);
 4b2:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end>
 4b6:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x1>
 4ba:	0e 94 cd 00 	call	0x19a	; 0x19a <Show_num>
 4be:	f9 cf       	rjmp	.-14     	; 0x4b2 <main+0x8>

000004c0 <__udivmodhi4>:
 4c0:	aa 1b       	sub	r26, r26
 4c2:	bb 1b       	sub	r27, r27
 4c4:	51 e1       	ldi	r21, 0x11	; 17
 4c6:	07 c0       	rjmp	.+14     	; 0x4d6 <__udivmodhi4_ep>

000004c8 <__udivmodhi4_loop>:
 4c8:	aa 1f       	adc	r26, r26
 4ca:	bb 1f       	adc	r27, r27
 4cc:	a6 17       	cp	r26, r22
 4ce:	b7 07       	cpc	r27, r23
 4d0:	10 f0       	brcs	.+4      	; 0x4d6 <__udivmodhi4_ep>
 4d2:	a6 1b       	sub	r26, r22
 4d4:	b7 0b       	sbc	r27, r23

000004d6 <__udivmodhi4_ep>:
 4d6:	88 1f       	adc	r24, r24
 4d8:	99 1f       	adc	r25, r25
 4da:	5a 95       	dec	r21
 4dc:	a9 f7       	brne	.-22     	; 0x4c8 <__udivmodhi4_loop>
 4de:	80 95       	com	r24
 4e0:	90 95       	com	r25
 4e2:	bc 01       	movw	r22, r24
 4e4:	cd 01       	movw	r24, r26
 4e6:	08 95       	ret

000004e8 <__tablejump2__>:
 4e8:	ee 0f       	add	r30, r30
 4ea:	ff 1f       	adc	r31, r31
 4ec:	05 90       	lpm	r0, Z+
 4ee:	f4 91       	lpm	r31, Z
 4f0:	e0 2d       	mov	r30, r0
 4f2:	09 94       	ijmp

000004f4 <_exit>:
 4f4:	f8 94       	cli

000004f6 <__stop_program>:
 4f6:	ff cf       	rjmp	.-2      	; 0x4f6 <__stop_program>
