
kitchenLampV2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000180  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  000001f4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000224  2**2
                  CONTENTS, READONLY
  5 .debug_info   00000420  00000000  00000000  00000260  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000003e8  00000000  00000000  00000680  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000f2  00000000  00000000  00000a68  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000169  00000000  00000000  00000b5a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0e c0       	rjmp	.+28     	; 0x1e <__ctors_end>
   2:	1d c0       	rjmp	.+58     	; 0x3e <__bad_interrupt>
   4:	1c c0       	rjmp	.+56     	; 0x3e <__bad_interrupt>
   6:	1b c0       	rjmp	.+54     	; 0x3e <__bad_interrupt>
   8:	1a c0       	rjmp	.+52     	; 0x3e <__bad_interrupt>
   a:	19 c0       	rjmp	.+50     	; 0x3e <__bad_interrupt>
   c:	18 c0       	rjmp	.+48     	; 0x3e <__bad_interrupt>
   e:	17 c0       	rjmp	.+46     	; 0x3e <__bad_interrupt>
  10:	16 c0       	rjmp	.+44     	; 0x3e <__bad_interrupt>
  12:	15 c0       	rjmp	.+42     	; 0x3e <__bad_interrupt>
  14:	14 c0       	rjmp	.+40     	; 0x3e <__bad_interrupt>
  16:	13 c0       	rjmp	.+38     	; 0x3e <__bad_interrupt>
  18:	12 c0       	rjmp	.+36     	; 0x3e <__bad_interrupt>
  1a:	11 c0       	rjmp	.+34     	; 0x3e <__bad_interrupt>
  1c:	10 c0       	rjmp	.+32     	; 0x3e <__bad_interrupt>

0000001e <__ctors_end>:
  1e:	11 24       	eor	r1, r1
  20:	1f be       	out	0x3f, r1	; 63
  22:	cf e5       	ldi	r28, 0x5F	; 95
  24:	d2 e0       	ldi	r29, 0x02	; 2
  26:	de bf       	out	0x3e, r29	; 62
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_clear_bss>:
  2a:	20 e0       	ldi	r18, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	01 c0       	rjmp	.+2      	; 0x34 <.do_clear_bss_start>

00000032 <.do_clear_bss_loop>:
  32:	1d 92       	st	X+, r1

00000034 <.do_clear_bss_start>:
  34:	a1 36       	cpi	r26, 0x61	; 97
  36:	b2 07       	cpc	r27, r18
  38:	e1 f7       	brne	.-8      	; 0x32 <.do_clear_bss_loop>
  3a:	6c d0       	rcall	.+216    	; 0x114 <main>
  3c:	9f c0       	rjmp	.+318    	; 0x17c <_exit>

0000003e <__bad_interrupt>:
  3e:	e0 cf       	rjmp	.-64     	; 0x0 <__vectors>

00000040 <sendBit0>:
  40:	c0 9a       	sbi	0x18, 0	; 24
	...
  4a:	c0 98       	cbi	0x18, 0	; 24
	...
  60:	08 95       	ret

00000062 <sendBit1>:
  62:	c0 9a       	sbi	0x18, 0	; 24
	...
  74:	00 00       	nop
  76:	c0 98       	cbi	0x18, 0	; 24
	...
  80:	00 00       	nop
  82:	08 95       	ret

00000084 <turnOn>:
  84:	0f 93       	push	r16
  86:	1f 93       	push	r17
  88:	cf 93       	push	r28
  8a:	df 93       	push	r29
  8c:	68 e1       	ldi	r22, 0x18	; 24
  8e:	70 e0       	ldi	r23, 0x00	; 0
  90:	64 d0       	rcall	.+200    	; 0x15a <__mulhi3>
  92:	8c 01       	movw	r16, r24
  94:	c0 e0       	ldi	r28, 0x00	; 0
  96:	d0 e0       	ldi	r29, 0x00	; 0
  98:	0c 17       	cp	r16, r28
  9a:	1d 07       	cpc	r17, r29
  9c:	19 f0       	breq	.+6      	; 0xa4 <turnOn+0x20>
  9e:	e1 df       	rcall	.-62     	; 0x62 <sendBit1>
  a0:	21 96       	adiw	r28, 0x01	; 1
  a2:	fa cf       	rjmp	.-12     	; 0x98 <turnOn+0x14>
  a4:	df 91       	pop	r29
  a6:	cf 91       	pop	r28
  a8:	1f 91       	pop	r17
  aa:	0f 91       	pop	r16
  ac:	08 95       	ret

000000ae <turnOff>:
  ae:	0f 93       	push	r16
  b0:	1f 93       	push	r17
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
  b6:	68 e1       	ldi	r22, 0x18	; 24
  b8:	70 e0       	ldi	r23, 0x00	; 0
  ba:	4f d0       	rcall	.+158    	; 0x15a <__mulhi3>
  bc:	8c 01       	movw	r16, r24
  be:	c0 e0       	ldi	r28, 0x00	; 0
  c0:	d0 e0       	ldi	r29, 0x00	; 0
  c2:	0c 17       	cp	r16, r28
  c4:	1d 07       	cpc	r17, r29
  c6:	19 f0       	breq	.+6      	; 0xce <turnOff+0x20>
  c8:	bb df       	rcall	.-138    	; 0x40 <sendBit0>
  ca:	21 96       	adiw	r28, 0x01	; 1
  cc:	fa cf       	rjmp	.-12     	; 0xc2 <turnOff+0x14>
  ce:	df 91       	pop	r29
  d0:	cf 91       	pop	r28
  d2:	1f 91       	pop	r17
  d4:	0f 91       	pop	r16
  d6:	08 95       	ret

000000d8 <onAction>:
  d8:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  dc:	88 23       	and	r24, r24
  de:	41 f0       	breq	.+16     	; 0xf0 <onAction+0x18>
  e0:	81 30       	cpi	r24, 0x01	; 1
  e2:	a9 f4       	brne	.+42     	; 0x10e <onAction+0x36>
  e4:	82 e2       	ldi	r24, 0x22	; 34
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	e2 df       	rcall	.-60     	; 0xae <turnOff>
  ea:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
  ee:	06 c0       	rjmp	.+12     	; 0xfc <onAction+0x24>
  f0:	82 e2       	ldi	r24, 0x22	; 34
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	c7 df       	rcall	.-114    	; 0x84 <turnOn>
  f6:	81 e0       	ldi	r24, 0x01	; 1
  f8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
  fc:	2f ef       	ldi	r18, 0xFF	; 255
  fe:	83 ed       	ldi	r24, 0xD3	; 211
 100:	90 e3       	ldi	r25, 0x30	; 48
 102:	21 50       	subi	r18, 0x01	; 1
 104:	80 40       	sbci	r24, 0x00	; 0
 106:	90 40       	sbci	r25, 0x00	; 0
 108:	e1 f7       	brne	.-8      	; 0x102 <onAction+0x2a>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <onAction+0x34>
 10c:	00 00       	nop
 10e:	b2 9b       	sbis	0x16, 2	; 22
 110:	fe cf       	rjmp	.-4      	; 0x10e <onAction+0x36>
 112:	08 95       	ret

00000114 <main>:
 114:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 118:	b8 9a       	sbi	0x17, 0	; 23
 11a:	c0 98       	cbi	0x18, 0	; 24
 11c:	2f ef       	ldi	r18, 0xFF	; 255
 11e:	89 e6       	ldi	r24, 0x69	; 105
 120:	98 e1       	ldi	r25, 0x18	; 24
 122:	21 50       	subi	r18, 0x01	; 1
 124:	80 40       	sbci	r24, 0x00	; 0
 126:	90 40       	sbci	r25, 0x00	; 0
 128:	e1 f7       	brne	.-8      	; 0x122 <main+0xe>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <main+0x18>
 12c:	00 00       	nop
 12e:	82 e2       	ldi	r24, 0x22	; 34
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	bd df       	rcall	.-134    	; 0xae <turnOff>
 134:	2f ef       	ldi	r18, 0xFF	; 255
 136:	89 e6       	ldi	r24, 0x69	; 105
 138:	98 e1       	ldi	r25, 0x18	; 24
 13a:	21 50       	subi	r18, 0x01	; 1
 13c:	80 40       	sbci	r24, 0x00	; 0
 13e:	90 40       	sbci	r25, 0x00	; 0
 140:	e1 f7       	brne	.-8      	; 0x13a <main+0x26>
 142:	00 c0       	rjmp	.+0      	; 0x144 <main+0x30>
 144:	00 00       	nop
 146:	b2 9b       	sbis	0x16, 2	; 22
 148:	c7 df       	rcall	.-114    	; 0xd8 <onAction>
 14a:	2f ef       	ldi	r18, 0xFF	; 255
 14c:	80 e7       	ldi	r24, 0x70	; 112
 14e:	92 e0       	ldi	r25, 0x02	; 2
 150:	21 50       	subi	r18, 0x01	; 1
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	90 40       	sbci	r25, 0x00	; 0
 156:	e1 f7       	brne	.-8      	; 0x150 <main+0x3c>
 158:	f4 cf       	rjmp	.-24     	; 0x142 <main+0x2e>

0000015a <__mulhi3>:
 15a:	00 24       	eor	r0, r0
 15c:	55 27       	eor	r21, r21
 15e:	04 c0       	rjmp	.+8      	; 0x168 <__mulhi3+0xe>
 160:	08 0e       	add	r0, r24
 162:	59 1f       	adc	r21, r25
 164:	88 0f       	add	r24, r24
 166:	99 1f       	adc	r25, r25
 168:	00 97       	sbiw	r24, 0x00	; 0
 16a:	29 f0       	breq	.+10     	; 0x176 <__mulhi3+0x1c>
 16c:	76 95       	lsr	r23
 16e:	67 95       	ror	r22
 170:	b8 f3       	brcs	.-18     	; 0x160 <__mulhi3+0x6>
 172:	71 05       	cpc	r23, r1
 174:	b9 f7       	brne	.-18     	; 0x164 <__mulhi3+0xa>
 176:	80 2d       	mov	r24, r0
 178:	95 2f       	mov	r25, r21
 17a:	08 95       	ret

0000017c <_exit>:
 17c:	f8 94       	cli

0000017e <__stop_program>:
 17e:	ff cf       	rjmp	.-2      	; 0x17e <__stop_program>
